"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = _interopRequireWildcard(require("react"));
var _analyticsNext = require("@atlaskit/analytics-next");
var _noop = _interopRequireDefault(require("@atlaskit/ds-lib/noop"));
var _useControlled3 = _interopRequireDefault(require("@atlaskit/ds-lib/use-controlled"));
var _chevronLeftLarge = _interopRequireDefault(require("@atlaskit/icon/glyph/chevron-left-large"));
var _chevronRightLarge = _interopRequireDefault(require("@atlaskit/icon/glyph/chevron-right-large"));
var _primitives = require("@atlaskit/primitives");
var _navigator = _interopRequireDefault(require("./internal/components/navigator"));
var _page = _interopRequireDefault(require("./internal/components/page"));
var _renderEllipsis = _interopRequireDefault(require("./internal/components/render-ellipsis"));
var _constants = require("./internal/constants");
var _collapseRange = _interopRequireDefault(require("./internal/utils/collapse-range"));
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var analyticsAttributes = {
  componentName: 'pagination',
  packageName: "@atlaskit/pagination",
  packageVersion: "14.7.5"
};
var paginationMenuStyles = (0, _primitives.xcss)({
  padding: 'space.0',
  margin: 'space.0'
});
var paginationMenuItemStyles = (0, _primitives.xcss)({
  marginBlockStart: 'space.0'
});
function InnerPagination(_ref, ref) {
  var _ref$components = _ref.components,
    components = _ref$components === void 0 ? _constants.emptyObject : _ref$components,
    _ref$defaultSelectedI = _ref.defaultSelectedIndex,
    defaultSelectedIndex = _ref$defaultSelectedI === void 0 ? 0 : _ref$defaultSelectedI,
    selectedIndex = _ref.selectedIndex,
    _ref$label = _ref.label,
    label = _ref$label === void 0 ? 'pagination' : _ref$label,
    _ref$pageLabel = _ref.pageLabel,
    pageLabel = _ref$pageLabel === void 0 ? 'page' : _ref$pageLabel,
    _ref$previousLabel = _ref.previousLabel,
    previousLabel = _ref$previousLabel === void 0 ? 'previous' : _ref$previousLabel,
    _ref$nextLabel = _ref.nextLabel,
    nextLabel = _ref$nextLabel === void 0 ? 'next' : _ref$nextLabel,
    _ref$style = _ref.style,
    style = _ref$style === void 0 ? _constants.emptyObject : _ref$style,
    _ref$max = _ref.max,
    max = _ref$max === void 0 ? 7 : _ref$max,
    _ref$onChange = _ref.onChange,
    onChange = _ref$onChange === void 0 ? _noop.default : _ref$onChange,
    pages = _ref.pages,
    getPageLabel = _ref.getPageLabel,
    _ref$renderEllipsis = _ref.renderEllipsis,
    renderEllipsis = _ref$renderEllipsis === void 0 ? _renderEllipsis.default : _ref$renderEllipsis,
    analyticsContext = _ref.analyticsContext,
    testId = _ref.testId,
    isDisabled = _ref.isDisabled;
  var _useControlled = (0, _useControlled3.default)(selectedIndex, function () {
      return defaultSelectedIndex || 0;
    }),
    _useControlled2 = (0, _slicedToArray2.default)(_useControlled, 2),
    selectedIndexValue = _useControlled2[0],
    setSelectedIndexValue = _useControlled2[1];
  var onChangeWithAnalytics = (0, _analyticsNext.usePlatformLeafEventHandler)(_objectSpread({
    fn: function fn(value, analyticsEvent) {
      var event = value.event,
        selectedPageIndex = value.selectedPageIndex;
      if (selectedIndex === undefined) {
        setSelectedIndexValue(selectedPageIndex);
      }
      if (onChange) {
        onChange(event, pages[selectedPageIndex], analyticsEvent);
      }
    },
    action: 'changed',
    actionSubject: 'pageNumber',
    analyticsData: analyticsContext
  }, analyticsAttributes));
  var transform = function transform(page, currPageIndex, testId) {
    var selectedPage = pages[selectedIndexValue];
    var pageIndexLabel = "".concat(pageLabel, " ").concat(getPageLabel ? getPageLabel(page, currPageIndex) : page);
    var isCurrentPage = page === selectedPage;
    return /*#__PURE__*/_react.default.createElement(_primitives.Inline, {
      as: "li",
      xcss: paginationMenuItemStyles,
      key: "page-".concat(getPageLabel ? getPageLabel(page, currPageIndex) : currPageIndex)
    }, /*#__PURE__*/_react.default.createElement(_page.default, {
      component: components.Page,
      onClick: function onClick(event) {
        return onChangeWithAnalytics({
          event: event,
          selectedPageIndex: currPageIndex
        });
      },
      "aria-current": isCurrentPage ? 'page' : undefined,
      "aria-label": pageIndexLabel,
      isSelected: isCurrentPage,
      isDisabled: isDisabled,
      page: page,
      testId: testId && "".concat(testId, "--").concat(isCurrentPage ? 'current-' : '', "page-").concat(currPageIndex)
    }, getPageLabel ? getPageLabel(page, currPageIndex) : page));
  };
  return (
    /*#__PURE__*/
    // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop -- Ignored via go/DSP-18766
    _react.default.createElement(_primitives.Box, {
      testId: testId,
      style: style,
      ref: ref,
      "aria-label": label,
      as: "nav"
    }, /*#__PURE__*/_react.default.createElement(_primitives.Inline, {
      space: "space.0",
      alignBlock: "center"
    }, /*#__PURE__*/_react.default.createElement(_navigator.default, {
      key: "left-navigator",
      component: components.Previous,
      onClick: function onClick(event) {
        return onChangeWithAnalytics({
          event: event,
          selectedPageIndex: selectedIndexValue - 1
        });
      },
      isDisabled: isDisabled || selectedIndexValue === 0,
      iconBefore: /*#__PURE__*/_react.default.createElement(_chevronLeftLarge.default, {
        label: ""
      }),
      "aria-label": previousLabel,
      testId: testId && "".concat(testId, "--left-navigator")
    }), /*#__PURE__*/_react.default.createElement(_primitives.Inline, {
      space: "space.0",
      alignBlock: "baseline",
      as: "ul",
      xcss: paginationMenuStyles
    }, (0, _collapseRange.default)(pages, selectedIndexValue, {
      max: max,
      ellipsis: renderEllipsis,
      transform: transform
    }, testId)), /*#__PURE__*/_react.default.createElement(_navigator.default, {
      key: "right-navigator",
      component: components.Next,
      onClick: function onClick(event) {
        return onChangeWithAnalytics({
          event: event,
          selectedPageIndex: selectedIndexValue + 1
        });
      },
      isDisabled: isDisabled || selectedIndexValue === pages.length - 1,
      iconBefore: /*#__PURE__*/_react.default.createElement(_chevronRightLarge.default, {
        label: ""
      }),
      "aria-label": nextLabel,
      testId: testId && "".concat(testId, "--right-navigator")
    })))
  );
}
var Pagination = /*#__PURE__*/(0, _react.forwardRef)(InnerPagination);
var _default = exports.default = /*#__PURE__*/(0, _react.memo)(Pagination);