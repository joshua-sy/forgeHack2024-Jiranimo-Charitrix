"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = require("react");
var _react2 = require("@emotion/react");
var _svg = _interopRequireDefault(require("@atlaskit/icon/svg"));
/**  @jsx jsx */

// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766

function getIcon(isIndeterminate, isChecked) {
  if (isIndeterminate) {
    return (0, _react2.jsx)("rect", {
      fill: "inherit",
      x: "8",
      y: "11",
      width: "8",
      height: "2",
      rx: "1"
    });
  }
  if (isChecked) {
    return (0, _react2.jsx)("path", {
      d: "M9.707 11.293a1 1 0 1 0-1.414 1.414l2 2a1 1 0 0 0 1.414 0l4-4a1 1 0 1 0-1.414-1.414L11 12.586l-1.293-1.293z",
      fill: "inherit"
    });
  }

  // No icon
  return null;
}

/**
 * __Checkbox icon__
 *
 * A checkbox icon is the visual representation of checkbox state,
 * which is shown instead of the native input.
 *
 * @internal
 */
var CheckboxIcon = /*#__PURE__*/(0, _react.memo)(function (_ref) {
  var size = _ref.size,
    isIndeterminate = _ref.isIndeterminate,
    isChecked = _ref.isChecked;
  var icon = (0, _react.useMemo)(function () {
    return getIcon(isIndeterminate, isChecked);
  }, [isIndeterminate, isChecked]);
  return (0, _react2.jsx)(_svg.default, {
    label: "",
    size: size,
    primaryColor: "var(--checkbox-background-color)",
    secondaryColor: "var(--checkbox-tick-color)"
  }, (0, _react2.jsx)("g", {
    fillRule: "evenodd"
  }, (0, _react2.jsx)("rect", {
    fill: "currentColor",
    x: "6",
    y: "6",
    width: "12",
    height: "12",
    rx: "2"
  }), icon));
});
var _default = exports.default = CheckboxIcon;