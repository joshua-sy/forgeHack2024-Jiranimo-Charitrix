import React from 'react';
import EditorCloseIcon from '@atlaskit/icon/glyph/editor/close';
import { Pressable, xcss } from '@atlaskit/primitives';
import { cssVar } from '../../../constants';
var removeButtonStyles = xcss({
  display: 'flex',
  height: '16px',
  margin: 'space.0',
  padding: 'space.0',
  position: 'absolute',
  insetInlineEnd: 'space.0',
  alignItems: 'center',
  justifyContent: 'center',
  alignSelf: 'center',
  appearance: 'none',
  backgroundColor: 'color.background.neutral.subtle',
  border: 'none',
  // Once legacy theming is dropped, this can be changed to 'border.radius'
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values, @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
  borderRadius: "var(".concat(cssVar.borderRadius, ")"),
  // Once legacy theming is dropped, this can be changed to 'inherit'
  // @ts-expect-error
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values, @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
  color: "var(".concat(cssVar.color.removeButton.default, ")"),
  cursor: 'pointer',
  pointerEvents: 'auto',
  ':focus-visible': {
    outlineOffset: 'space.0'
  },
  ':hover': {
    // Once legacy theming is dropped, this can be changed to 'cssVar.color.text.default'
    // @ts-expect-error
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values, @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
    color: "var(".concat(cssVar.color.removeButton.hover, ")")
  }
});
var RemoveButton = function RemoveButton(_ref) {
  var ariaLabel = _ref['aria-label'],
    onClick = _ref.onClick,
    onFocus = _ref.onFocus,
    onBlur = _ref.onBlur,
    onKeyPress = _ref.onKeyPress,
    onMouseOver = _ref.onMouseOver,
    onMouseOut = _ref.onMouseOut,
    testId = _ref.testId;
  return /*#__PURE__*/React.createElement(Pressable, {
    xcss: removeButtonStyles,
    "aria-label": ariaLabel,
    onClick: onClick,
    onFocus: onFocus,
    onBlur: onBlur,
    onKeyPress: onKeyPress,
    onMouseOver: onMouseOver,
    onMouseOut: onMouseOut,
    testId: testId
  }, /*#__PURE__*/React.createElement(EditorCloseIcon, {
    label: "close tag",
    size: "small"
  }));
};

// eslint-disable-next-line @repo/internal/react/require-jsdoc
export default RemoveButton;