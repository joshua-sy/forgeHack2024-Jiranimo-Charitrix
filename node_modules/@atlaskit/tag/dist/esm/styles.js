/* eslint-disable @atlaskit/design-system/ensure-design-token-usage */
import * as colors from '@atlaskit/theme/colors';
import { defaultBorderRadius, defaultRoundedBorderRadius } from './constants';

// Text colors
export var textColors = {
  standard: "var(--ds-text, ".concat(colors.N700, ")"),
  standardLink: "var(--ds-link, ".concat(colors.B400, ")"),
  blue: "var(--ds-text-accent-blue-bolder, ".concat(colors.N800, ")"),
  red: "var(--ds-text-accent-red-bolder, ".concat(colors.N800, ")"),
  yellow: "var(--ds-text-accent-yellow-bolder, ".concat(colors.N800, ")"),
  green: "var(--ds-text-accent-green-bolder, ".concat(colors.N800, ")"),
  teal: "var(--ds-text-accent-teal-bolder, ".concat(colors.N800, ")"),
  purple: "var(--ds-text-accent-purple-bolder, ".concat(colors.N800, ")"),
  lime: "var(--ds-text-accent-lime-bolder, #37471F)",
  magenta: "var(--ds-text-accent-magenta-bolder, #50253F)",
  orange: "var(--ds-text-accent-orange-bolder, #5F3811)",
  grey: "var(--ds-text-accent-gray-bolder, ".concat(colors.N0, ")"),
  blueLight: "var(--ds-text-accent-blue, ".concat(colors.B500, ")"),
  redLight: "var(--ds-text-accent-red, ".concat(colors.N500, ")"),
  yellowLight: "var(--ds-text-accent-yellow, ".concat(colors.N500, ")"),
  greenLight: "var(--ds-text-accent-green, ".concat(colors.G500, ")"),
  tealLight: "var(--ds-text-accent-teal, ".concat(colors.N500, ")"),
  purpleLight: "var(--ds-text-accent-purple, ".concat(colors.P500, ")"),
  limeLight: "var(--ds-text-accent-lime, #4C6B1F)",
  magentaLight: "var(--ds-text-accent-magenta, #943D73)",
  orangeLight: "var(--ds-text-accent-orange, #974F0C)",
  greyLight: "var(--ds-text-accent-gray, ".concat(colors.N500, ")")
};

/**
 * With design tokens, hover colors do not change
 * compared to resting state. These are only here
 * for backwards compatibiltiy with legacy theming.
 * This can be removed when legacy theming is removed
 */
export var textHoverColors = {
  standard: "var(--ds-link, ".concat(colors.B300, ")"),
  blue: "var(--ds-text-accent-blue-bolder, ".concat(colors.N800, ")"),
  red: "var(--ds-text-accent-red-bolder, ".concat(colors.N800, ")"),
  yellow: "var(--ds-text-accent-yellow-bolder, ".concat(colors.N800, ")"),
  green: "var(--ds-text-accent-green-bolder, ".concat(colors.N800, ")"),
  teal: "var(--ds-text-accent-teal-bolder, ".concat(colors.N800, ")"),
  purple: "var(--ds-text-accent-purple-bolder, ".concat(colors.N800, ")"),
  lime: "var(--ds-text-accent-lime-bolder, #37471F)",
  magenta: "var(--ds-text-accent-magenta-bolder, #50253F)",
  orange: "var(--ds-text-accent-orange-bolder, #5F3811)",
  grey: "var(--ds-text-accent-gray-bolder, ".concat(colors.N0, ")"),
  blueLight: "var(--ds-text-accent-blue, ".concat(colors.B500, ")"),
  redLight: "var(--ds-text-accent-red, ".concat(colors.N500, ")"),
  yellowLight: "var(--ds-text-accent-yellow, ".concat(colors.N500, ")"),
  greenLight: "var(--ds-text-accent-green, ".concat(colors.G500, ")"),
  tealLight: "var(--ds-text-accent-teal, ".concat(colors.N500, ")"),
  purpleLight: "var(--ds-text-accent-purple, ".concat(colors.P500, ")"),
  limeLight: "var(--ds-text-accent-lime, #4C6B1F)",
  magentaLight: "var(--ds-text-accent-magenta, #943D73)",
  orangeLight: "var(--ds-text-accent-orange, #974F0C)",
  greyLight: "var(--ds-text-accent-gray, ".concat(colors.N500, ")")
};
export var textActiveColors = {
  standard: "var(--ds-link-pressed, ".concat(colors.B300, ")"),
  blue: "var(--ds-text-accent-blue, ".concat(colors.N800, ")"),
  red: "var(--ds-text-accent-red, ".concat(colors.N800, ")"),
  yellow: "var(--ds-text-accent-yellow, ".concat(colors.N800, ")"),
  green: "var(--ds-text-accent-green, ".concat(colors.N800, ")"),
  teal: "var(--ds-text-accent-teal, ".concat(colors.N800, ")"),
  purple: "var(--ds-text-accent-purple, ".concat(colors.N800, ")"),
  lime: "var(--ds-text-accent-lime, #4C6B1F)",
  magenta: "var(--ds-text-accent-magenta, #943D73)",
  orange: "var(--ds-text-accent-orange, #974F0C)",
  grey: "var(--ds-text-accent-gray, ".concat(colors.N0, ")"),
  blueLight: "var(--ds-text-accent-blue-bolder, ".concat(colors.B500, ")"),
  redLight: "var(--ds-text-accent-red-bolder, ".concat(colors.N500, ")"),
  yellowLight: "var(--ds-text-accent-yellow-bolder, ".concat(colors.N500, ")"),
  greenLight: "var(--ds-text-accent-green-bolder, ".concat(colors.G500, ")"),
  tealLight: "var(--ds-text-accent-teal-bolder, ".concat(colors.N500, ")"),
  purpleLight: "var(--ds-text-accent-purple-bolder, ".concat(colors.P500, ")"),
  limeLight: "var(--ds-text-accent-lime-bolder, #37471F)",
  magentaLight: "var(--ds-text-accent-magenta-bolder, #50253F)",
  orangeLight: "var(--ds-text-accent-orange-bolder, #5F3811)",
  greyLight: "var(--ds-text-accent-gray-bolder, ".concat(colors.N500, ")")
};

// Background colors
export var backgroundColors = {
  standard: "var(--ds-background-neutral, ".concat(colors.N20, ")"),
  blue: "var(--ds-background-accent-blue-subtle, ".concat(colors.B100, ")"),
  red: "var(--ds-background-accent-red-subtle, ".concat(colors.R100, ")"),
  yellow: "var(--ds-background-accent-yellow-subtle, ".concat(colors.Y200, ")"),
  green: "var(--ds-background-accent-green-subtle, ".concat(colors.G200, ")"),
  teal: "var(--ds-background-accent-teal-subtle, ".concat(colors.T200, ")"),
  purple: "var(--ds-background-accent-purple-subtle, ".concat(colors.P100, ")"),
  lime: "var(--ds-background-accent-lime-subtle, #94C748)",
  magenta: "var(--ds-background-accent-magenta-subtle, #E774BB)",
  orange: "var(--ds-background-accent-orange-subtle, #FAA53D)",
  grey: "var(--ds-background-accent-gray-subtle, ".concat(colors.N500, ")"),
  blueLight: "var(--ds-background-accent-blue-subtler, ".concat(colors.B75, ")"),
  redLight: "var(--ds-background-accent-red-subtler, ".concat(colors.R75, ")"),
  yellowLight: "var(--ds-background-accent-yellow-subtler, ".concat(colors.Y100, ")"),
  greenLight: "var(--ds-background-accent-green-subtler, ".concat(colors.G100, ")"),
  tealLight: "var(--ds-background-accent-teal-subtler, ".concat(colors.T100, ")"),
  purpleLight: "var(--ds-background-accent-purple-subtler, ".concat(colors.P75, ")"),
  limeLight: "var(--ds-background-accent-lime-subtler, #D3F1A7)",
  magentaLight: "var(--ds-background-accent-magenta-subtler, #FDD0EC)",
  orangeLight: "var(--ds-background-accent-orange-subtler, #FFE2BD)",
  greyLight: "var(--ds-background-accent-gray-subtler, ".concat(colors.N30, ")")
};
export var linkHoverBackgroundColors = {
  standard: "var(--ds-background-neutral-hovered, ".concat(colors.N30, ")"),
  blue: "var(--ds-background-accent-blue-subtle-hovered, ".concat(colors.B75, ")"),
  red: "var(--ds-background-accent-red-subtle-hovered, ".concat(colors.R75, ")"),
  yellow: "var(--ds-background-accent-yellow-subtle-hovered, ".concat(colors.Y100, ")"),
  green: "var(--ds-background-accent-green-subtle-hovered, ".concat(colors.G100, ")"),
  teal: "var(--ds-background-accent-teal-subtle-hovered, ".concat(colors.T100, ")"),
  purple: "var(--ds-background-accent-purple-subtle-hovered, ".concat(colors.P75, ")"),
  lime: "var(--ds-background-accent-lime-subtle-hovered, #B3DF72)",
  magenta: "var(--ds-background-accent-magenta-subtle-hovered, #F797D2)",
  orange: "var(--ds-background-accent-orange-subtle-hovered, #FEC57B)",
  grey: "var(--ds-background-accent-gray-subtle-hovered, ".concat(colors.N400, ")"),
  blueLight: "var(--ds-background-accent-blue-subtler-hovered, ".concat(colors.B50, ")"),
  redLight: "var(--ds-background-accent-red-subtler-hovered, ".concat(colors.R50, ")"),
  yellowLight: "var(--ds-background-accent-yellow-subtler-hovered, ".concat(colors.Y75, ")"),
  greenLight: "var(--ds-background-accent-green-subtler-hovered, ".concat(colors.G75, ")"),
  tealLight: "var(--ds-background-accent-teal-subtler-hovered, ".concat(colors.T75, ")"),
  purpleLight: "var(--ds-background-accent-purple-subtler-hovered, ".concat(colors.P50, ")"),
  limeLight: "var(--ds-background-accent-lime-subtler-hovered, #B3DF72)",
  magentaLight: "var(--ds-background-accent-magenta-subtler-hovered, #F797D2)",
  orangeLight: "var(--ds-background-accent-orange-subtler-hovered, #FEC57B)",
  greyLight: "var(--ds-background-accent-gray-subtler-hovered, ".concat(colors.N40, ")")
};
export var linkActiveBackgroundColors = {
  standard: "var(--ds-background-neutral-pressed, ".concat(colors.N30, ")"),
  blue: "var(--ds-background-accent-blue-subtle-pressed, ".concat(colors.B50, ")"),
  red: "var(--ds-background-accent-red-subtle-pressed, ".concat(colors.R50, ")"),
  yellow: "var(--ds-background-accent-yellow-subtle-pressed, ".concat(colors.Y75, ")"),
  green: "var(--ds-background-accent-green-subtle-pressed, ".concat(colors.G75, ")"),
  teal: "var(--ds-background-accent-teal-subtle-pressed, ".concat(colors.T75, ")"),
  purple: "var(--ds-background-accent-purple-subtle-pressed, ".concat(colors.P50, ")"),
  grey: "var(--ds-background-accent-gray-subtle-pressed, ".concat(colors.N300, ")"),
  lime: "var(--ds-background-accent-lime-subtle-pressed, #D3F1A7)",
  magenta: "var(--ds-background-accent-magenta-subtle-pressed, #FDD0EC)",
  orange: "var(--ds-background-accent-orange-subtle-pressed, #FFE2BD)",
  blueLight: "var(--ds-background-accent-blue-subtler-pressed, ".concat(colors.B100, ")"),
  redLight: "var(--ds-background-accent-red-subtler-pressed, ".concat(colors.R100, ")"),
  yellowLight: "var(--ds-background-accent-yellow-subtler-pressed, ".concat(colors.Y200, ")"),
  greenLight: "var(--ds-background-accent-green-subtler-pressed, ".concat(colors.G200, ")"),
  tealLight: "var(--ds-background-accent-teal-subtler-pressed, ".concat(colors.T200, ")"),
  purpleLight: "var(--ds-background-accent-purple-subtler-pressed, ".concat(colors.P100, ")"),
  limeLight: "var(--ds-background-accent-lime-subtler-pressed, #94C748)",
  magentaLight: "var(--ds-background-accent-magenta-subtler-pressed, #E774BB)",
  orangeLight: "var(--ds-background-accent-orange-subtler-pressed, #FAA53D)",
  greyLight: "var(--ds-background-accent-gray-subtler-pressed, ".concat(colors.N50, ")")
};
export var focusRingColors = "var(--ds-border-focused, ".concat(colors.B100, ")");
export var borderRadius = {
  default: defaultBorderRadius,
  rounded: defaultRoundedBorderRadius
};
export var removalHoverBackgroundColors = "var(--ds-background-danger, ".concat(colors.R50, ")");
export var removalActiveBackgroundColors = "var(--ds-background-danger-hovered, ".concat(colors.R50, ")");
export var removalTextColors = "var(--ds-text-danger, ".concat(colors.R500, ")");

/**
 * Remove button colors
 *
 * Once legacy theming support is dropped,
 * these can be removed and the remove button can inherit
 * from the tag text color
 */
export var removeButtonColors = {
  standard: "var(--ds-text, ".concat(colors.N500, ")"),
  blue: "var(--ds-text-accent-blue-bolder, ".concat(colors.N500, ")"),
  red: "var(--ds-text-accent-red-bolder, ".concat(colors.N500, ")"),
  yellow: "var(--ds-text-accent-yellow-bolder, ".concat(colors.N500, ")"),
  green: "var(--ds-text-accent-green-bolder, ".concat(colors.N500, ")"),
  teal: "var(--ds-text-accent-teal-bolder, ".concat(colors.N500, ")"),
  purple: "var(--ds-text-accent-purple-bolder, ".concat(colors.N500, ")"),
  lime: "var(--ds-text-accent-lime-bolder, ".concat(colors.N500, ")"),
  magenta: "var(--ds-text-accent-magenta-bolder, ".concat(colors.N500, ")"),
  orange: "var(--ds-text-accent-orange-bolder, ".concat(colors.N500, ")"),
  grey: "var(--ds-text-accent-gray-bolder, ".concat(colors.N500, ")"),
  blueLight: "var(--ds-text-accent-blue, ".concat(colors.N500, ")"),
  redLight: "var(--ds-text-accent-red, ".concat(colors.N500, ")"),
  yellowLight: "var(--ds-text-accent-yellow, ".concat(colors.N500, ")"),
  greenLight: "var(--ds-text-accent-green, ".concat(colors.N500, ")"),
  tealLight: "var(--ds-text-accent-teal, ".concat(colors.N500, ")"),
  purpleLight: "var(--ds-text-accent-purple, ".concat(colors.N500, ")"),
  limeLight: "var(--ds-text-accent-lime, ".concat(colors.N500, ")"),
  magentaLight: "var(--ds-text-accent-magenta, ".concat(colors.N500, ")"),
  orangeLight: "var(--ds-text-accent-orange, ".concat(colors.N500, ")"),
  greyLight: "var(--ds-text-accent-gray, ".concat(colors.N500, ")")
};
export var removeButtonHoverColors = {
  standard: "var(--ds-text-danger, ".concat(colors.N700, ")"),
  standardLink: "var(--ds-text-danger, ".concat(colors.B400, ")"),
  blue: "var(--ds-text-danger, ".concat(colors.N800, ")"),
  red: "var(--ds-text-danger, ".concat(colors.N800, ")"),
  yellow: "var(--ds-text-danger, ".concat(colors.N800, ")"),
  green: "var(--ds-text-danger, ".concat(colors.N800, ")"),
  teal: "var(--ds-text-danger, ".concat(colors.N800, ")"),
  purple: "var(--ds-text-danger, ".concat(colors.N800, ")"),
  lime: "var(--ds-text-danger, ".concat(colors.N800, ")"),
  magenta: "var(--ds-text-danger, ".concat(colors.N800, ")"),
  orange: "var(--ds-text-danger, ".concat(colors.N800, ")"),
  grey: "var(--ds-text-danger, ".concat(colors.N0, ")"),
  blueLight: "var(--ds-text-danger, ".concat(colors.B500, ")"),
  redLight: "var(--ds-text-danger, ".concat(colors.N500, ")"),
  yellowLight: "var(--ds-text-danger, ".concat(colors.N500, ")"),
  greenLight: "var(--ds-text-danger, ".concat(colors.G500, ")"),
  tealLight: "var(--ds-text-danger, ".concat(colors.N500, ")"),
  purpleLight: "var(--ds-text-danger, ".concat(colors.P500, ")"),
  limeLight: "var(--ds-text-danger, ".concat(colors.P500, ")"),
  magentaLight: "var(--ds-text-danger, ".concat(colors.P500, ")"),
  orangeLight: "var(--ds-text-danger, ".concat(colors.P500, ")"),
  greyLight: "var(--ds-text-danger, ".concat(colors.N500, ")")
};