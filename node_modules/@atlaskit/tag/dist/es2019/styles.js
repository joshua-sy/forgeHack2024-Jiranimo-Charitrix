/* eslint-disable @atlaskit/design-system/ensure-design-token-usage */
import * as colors from '@atlaskit/theme/colors';
import { defaultBorderRadius, defaultRoundedBorderRadius } from './constants';

// Text colors
export const textColors = {
  standard: `var(--ds-text, ${colors.N700})`,
  standardLink: `var(--ds-link, ${colors.B400})`,
  blue: `var(--ds-text-accent-blue-bolder, ${colors.N800})`,
  red: `var(--ds-text-accent-red-bolder, ${colors.N800})`,
  yellow: `var(--ds-text-accent-yellow-bolder, ${colors.N800})`,
  green: `var(--ds-text-accent-green-bolder, ${colors.N800})`,
  teal: `var(--ds-text-accent-teal-bolder, ${colors.N800})`,
  purple: `var(--ds-text-accent-purple-bolder, ${colors.N800})`,
  lime: "var(--ds-text-accent-lime-bolder, #37471F)",
  magenta: "var(--ds-text-accent-magenta-bolder, #50253F)",
  orange: "var(--ds-text-accent-orange-bolder, #5F3811)",
  grey: `var(--ds-text-accent-gray-bolder, ${colors.N0})`,
  blueLight: `var(--ds-text-accent-blue, ${colors.B500})`,
  redLight: `var(--ds-text-accent-red, ${colors.N500})`,
  yellowLight: `var(--ds-text-accent-yellow, ${colors.N500})`,
  greenLight: `var(--ds-text-accent-green, ${colors.G500})`,
  tealLight: `var(--ds-text-accent-teal, ${colors.N500})`,
  purpleLight: `var(--ds-text-accent-purple, ${colors.P500})`,
  limeLight: "var(--ds-text-accent-lime, #4C6B1F)",
  magentaLight: "var(--ds-text-accent-magenta, #943D73)",
  orangeLight: "var(--ds-text-accent-orange, #974F0C)",
  greyLight: `var(--ds-text-accent-gray, ${colors.N500})`
};

/**
 * With design tokens, hover colors do not change
 * compared to resting state. These are only here
 * for backwards compatibiltiy with legacy theming.
 * This can be removed when legacy theming is removed
 */
export const textHoverColors = {
  standard: `var(--ds-link, ${colors.B300})`,
  blue: `var(--ds-text-accent-blue-bolder, ${colors.N800})`,
  red: `var(--ds-text-accent-red-bolder, ${colors.N800})`,
  yellow: `var(--ds-text-accent-yellow-bolder, ${colors.N800})`,
  green: `var(--ds-text-accent-green-bolder, ${colors.N800})`,
  teal: `var(--ds-text-accent-teal-bolder, ${colors.N800})`,
  purple: `var(--ds-text-accent-purple-bolder, ${colors.N800})`,
  lime: "var(--ds-text-accent-lime-bolder, #37471F)",
  magenta: "var(--ds-text-accent-magenta-bolder, #50253F)",
  orange: "var(--ds-text-accent-orange-bolder, #5F3811)",
  grey: `var(--ds-text-accent-gray-bolder, ${colors.N0})`,
  blueLight: `var(--ds-text-accent-blue, ${colors.B500})`,
  redLight: `var(--ds-text-accent-red, ${colors.N500})`,
  yellowLight: `var(--ds-text-accent-yellow, ${colors.N500})`,
  greenLight: `var(--ds-text-accent-green, ${colors.G500})`,
  tealLight: `var(--ds-text-accent-teal, ${colors.N500})`,
  purpleLight: `var(--ds-text-accent-purple, ${colors.P500})`,
  limeLight: "var(--ds-text-accent-lime, #4C6B1F)",
  magentaLight: "var(--ds-text-accent-magenta, #943D73)",
  orangeLight: "var(--ds-text-accent-orange, #974F0C)",
  greyLight: `var(--ds-text-accent-gray, ${colors.N500})`
};
export const textActiveColors = {
  standard: `var(--ds-link-pressed, ${colors.B300})`,
  blue: `var(--ds-text-accent-blue, ${colors.N800})`,
  red: `var(--ds-text-accent-red, ${colors.N800})`,
  yellow: `var(--ds-text-accent-yellow, ${colors.N800})`,
  green: `var(--ds-text-accent-green, ${colors.N800})`,
  teal: `var(--ds-text-accent-teal, ${colors.N800})`,
  purple: `var(--ds-text-accent-purple, ${colors.N800})`,
  lime: "var(--ds-text-accent-lime, #4C6B1F)",
  magenta: "var(--ds-text-accent-magenta, #943D73)",
  orange: "var(--ds-text-accent-orange, #974F0C)",
  grey: `var(--ds-text-accent-gray, ${colors.N0})`,
  blueLight: `var(--ds-text-accent-blue-bolder, ${colors.B500})`,
  redLight: `var(--ds-text-accent-red-bolder, ${colors.N500})`,
  yellowLight: `var(--ds-text-accent-yellow-bolder, ${colors.N500})`,
  greenLight: `var(--ds-text-accent-green-bolder, ${colors.G500})`,
  tealLight: `var(--ds-text-accent-teal-bolder, ${colors.N500})`,
  purpleLight: `var(--ds-text-accent-purple-bolder, ${colors.P500})`,
  limeLight: "var(--ds-text-accent-lime-bolder, #37471F)",
  magentaLight: "var(--ds-text-accent-magenta-bolder, #50253F)",
  orangeLight: "var(--ds-text-accent-orange-bolder, #5F3811)",
  greyLight: `var(--ds-text-accent-gray-bolder, ${colors.N500})`
};

// Background colors
export const backgroundColors = {
  standard: `var(--ds-background-neutral, ${colors.N20})`,
  blue: `var(--ds-background-accent-blue-subtle, ${colors.B100})`,
  red: `var(--ds-background-accent-red-subtle, ${colors.R100})`,
  yellow: `var(--ds-background-accent-yellow-subtle, ${colors.Y200})`,
  green: `var(--ds-background-accent-green-subtle, ${colors.G200})`,
  teal: `var(--ds-background-accent-teal-subtle, ${colors.T200})`,
  purple: `var(--ds-background-accent-purple-subtle, ${colors.P100})`,
  lime: "var(--ds-background-accent-lime-subtle, #94C748)",
  magenta: "var(--ds-background-accent-magenta-subtle, #E774BB)",
  orange: "var(--ds-background-accent-orange-subtle, #FAA53D)",
  grey: `var(--ds-background-accent-gray-subtle, ${colors.N500})`,
  blueLight: `var(--ds-background-accent-blue-subtler, ${colors.B75})`,
  redLight: `var(--ds-background-accent-red-subtler, ${colors.R75})`,
  yellowLight: `var(--ds-background-accent-yellow-subtler, ${colors.Y100})`,
  greenLight: `var(--ds-background-accent-green-subtler, ${colors.G100})`,
  tealLight: `var(--ds-background-accent-teal-subtler, ${colors.T100})`,
  purpleLight: `var(--ds-background-accent-purple-subtler, ${colors.P75})`,
  limeLight: "var(--ds-background-accent-lime-subtler, #D3F1A7)",
  magentaLight: "var(--ds-background-accent-magenta-subtler, #FDD0EC)",
  orangeLight: "var(--ds-background-accent-orange-subtler, #FFE2BD)",
  greyLight: `var(--ds-background-accent-gray-subtler, ${colors.N30})`
};
export const linkHoverBackgroundColors = {
  standard: `var(--ds-background-neutral-hovered, ${colors.N30})`,
  blue: `var(--ds-background-accent-blue-subtle-hovered, ${colors.B75})`,
  red: `var(--ds-background-accent-red-subtle-hovered, ${colors.R75})`,
  yellow: `var(--ds-background-accent-yellow-subtle-hovered, ${colors.Y100})`,
  green: `var(--ds-background-accent-green-subtle-hovered, ${colors.G100})`,
  teal: `var(--ds-background-accent-teal-subtle-hovered, ${colors.T100})`,
  purple: `var(--ds-background-accent-purple-subtle-hovered, ${colors.P75})`,
  lime: "var(--ds-background-accent-lime-subtle-hovered, #B3DF72)",
  magenta: "var(--ds-background-accent-magenta-subtle-hovered, #F797D2)",
  orange: "var(--ds-background-accent-orange-subtle-hovered, #FEC57B)",
  grey: `var(--ds-background-accent-gray-subtle-hovered, ${colors.N400})`,
  blueLight: `var(--ds-background-accent-blue-subtler-hovered, ${colors.B50})`,
  redLight: `var(--ds-background-accent-red-subtler-hovered, ${colors.R50})`,
  yellowLight: `var(--ds-background-accent-yellow-subtler-hovered, ${colors.Y75})`,
  greenLight: `var(--ds-background-accent-green-subtler-hovered, ${colors.G75})`,
  tealLight: `var(--ds-background-accent-teal-subtler-hovered, ${colors.T75})`,
  purpleLight: `var(--ds-background-accent-purple-subtler-hovered, ${colors.P50})`,
  limeLight: "var(--ds-background-accent-lime-subtler-hovered, #B3DF72)",
  magentaLight: "var(--ds-background-accent-magenta-subtler-hovered, #F797D2)",
  orangeLight: "var(--ds-background-accent-orange-subtler-hovered, #FEC57B)",
  greyLight: `var(--ds-background-accent-gray-subtler-hovered, ${colors.N40})`
};
export const linkActiveBackgroundColors = {
  standard: `var(--ds-background-neutral-pressed, ${colors.N30})`,
  blue: `var(--ds-background-accent-blue-subtle-pressed, ${colors.B50})`,
  red: `var(--ds-background-accent-red-subtle-pressed, ${colors.R50})`,
  yellow: `var(--ds-background-accent-yellow-subtle-pressed, ${colors.Y75})`,
  green: `var(--ds-background-accent-green-subtle-pressed, ${colors.G75})`,
  teal: `var(--ds-background-accent-teal-subtle-pressed, ${colors.T75})`,
  purple: `var(--ds-background-accent-purple-subtle-pressed, ${colors.P50})`,
  grey: `var(--ds-background-accent-gray-subtle-pressed, ${colors.N300})`,
  lime: "var(--ds-background-accent-lime-subtle-pressed, #D3F1A7)",
  magenta: "var(--ds-background-accent-magenta-subtle-pressed, #FDD0EC)",
  orange: "var(--ds-background-accent-orange-subtle-pressed, #FFE2BD)",
  blueLight: `var(--ds-background-accent-blue-subtler-pressed, ${colors.B100})`,
  redLight: `var(--ds-background-accent-red-subtler-pressed, ${colors.R100})`,
  yellowLight: `var(--ds-background-accent-yellow-subtler-pressed, ${colors.Y200})`,
  greenLight: `var(--ds-background-accent-green-subtler-pressed, ${colors.G200})`,
  tealLight: `var(--ds-background-accent-teal-subtler-pressed, ${colors.T200})`,
  purpleLight: `var(--ds-background-accent-purple-subtler-pressed, ${colors.P100})`,
  limeLight: "var(--ds-background-accent-lime-subtler-pressed, #94C748)",
  magentaLight: "var(--ds-background-accent-magenta-subtler-pressed, #E774BB)",
  orangeLight: "var(--ds-background-accent-orange-subtler-pressed, #FAA53D)",
  greyLight: `var(--ds-background-accent-gray-subtler-pressed, ${colors.N50})`
};
export const focusRingColors = `var(--ds-border-focused, ${colors.B100})`;
export const borderRadius = {
  default: defaultBorderRadius,
  rounded: defaultRoundedBorderRadius
};
export const removalHoverBackgroundColors = `var(--ds-background-danger, ${colors.R50})`;
export const removalActiveBackgroundColors = `var(--ds-background-danger-hovered, ${colors.R50})`;
export const removalTextColors = `var(--ds-text-danger, ${colors.R500})`;

/**
 * Remove button colors
 *
 * Once legacy theming support is dropped,
 * these can be removed and the remove button can inherit
 * from the tag text color
 */
export const removeButtonColors = {
  standard: `var(--ds-text, ${colors.N500})`,
  blue: `var(--ds-text-accent-blue-bolder, ${colors.N500})`,
  red: `var(--ds-text-accent-red-bolder, ${colors.N500})`,
  yellow: `var(--ds-text-accent-yellow-bolder, ${colors.N500})`,
  green: `var(--ds-text-accent-green-bolder, ${colors.N500})`,
  teal: `var(--ds-text-accent-teal-bolder, ${colors.N500})`,
  purple: `var(--ds-text-accent-purple-bolder, ${colors.N500})`,
  lime: `var(--ds-text-accent-lime-bolder, ${colors.N500})`,
  magenta: `var(--ds-text-accent-magenta-bolder, ${colors.N500})`,
  orange: `var(--ds-text-accent-orange-bolder, ${colors.N500})`,
  grey: `var(--ds-text-accent-gray-bolder, ${colors.N500})`,
  blueLight: `var(--ds-text-accent-blue, ${colors.N500})`,
  redLight: `var(--ds-text-accent-red, ${colors.N500})`,
  yellowLight: `var(--ds-text-accent-yellow, ${colors.N500})`,
  greenLight: `var(--ds-text-accent-green, ${colors.N500})`,
  tealLight: `var(--ds-text-accent-teal, ${colors.N500})`,
  purpleLight: `var(--ds-text-accent-purple, ${colors.N500})`,
  limeLight: `var(--ds-text-accent-lime, ${colors.N500})`,
  magentaLight: `var(--ds-text-accent-magenta, ${colors.N500})`,
  orangeLight: `var(--ds-text-accent-orange, ${colors.N500})`,
  greyLight: `var(--ds-text-accent-gray, ${colors.N500})`
};
export const removeButtonHoverColors = {
  standard: `var(--ds-text-danger, ${colors.N700})`,
  standardLink: `var(--ds-text-danger, ${colors.B400})`,
  blue: `var(--ds-text-danger, ${colors.N800})`,
  red: `var(--ds-text-danger, ${colors.N800})`,
  yellow: `var(--ds-text-danger, ${colors.N800})`,
  green: `var(--ds-text-danger, ${colors.N800})`,
  teal: `var(--ds-text-danger, ${colors.N800})`,
  purple: `var(--ds-text-danger, ${colors.N800})`,
  lime: `var(--ds-text-danger, ${colors.N800})`,
  magenta: `var(--ds-text-danger, ${colors.N800})`,
  orange: `var(--ds-text-danger, ${colors.N800})`,
  grey: `var(--ds-text-danger, ${colors.N0})`,
  blueLight: `var(--ds-text-danger, ${colors.B500})`,
  redLight: `var(--ds-text-danger, ${colors.N500})`,
  yellowLight: `var(--ds-text-danger, ${colors.N500})`,
  greenLight: `var(--ds-text-danger, ${colors.G500})`,
  tealLight: `var(--ds-text-danger, ${colors.N500})`,
  purpleLight: `var(--ds-text-danger, ${colors.P500})`,
  limeLight: `var(--ds-text-danger, ${colors.P500})`,
  magentaLight: `var(--ds-text-danger, ${colors.P500})`,
  orangeLight: `var(--ds-text-danger, ${colors.P500})`,
  greyLight: `var(--ds-text-danger, ${colors.N500})`
};