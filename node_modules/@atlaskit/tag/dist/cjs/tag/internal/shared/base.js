"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var _react = _interopRequireDefault(require("react"));
var _react2 = require("@emotion/react");
var _constants = require("../../../constants");
var styles = _interopRequireWildcard(require("../../../styles"));
var _excluded = ["before", "contentElement", "after", "testId", "appearance", "style", "color", "href", "className"];
/**
 * @jsxRuntime classic
 */
/** @jsx jsx */
// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var baseStyles = (0, _react2.css)({
  display: 'inline-flex',
  minWidth: 0,
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values, @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
  height: _constants.tagHeight,
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values, @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
  margin: _constants.defaultMargin,
  padding: "var(--ds-space-0, 0px)",
  position: 'relative',
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values, @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
  backgroundColor: "var(".concat(_constants.cssVar.color.background.default, ")"),
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values, @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
  borderRadius: "var(".concat(_constants.cssVar.borderRadius, ")"),
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values, @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
  color: "var(".concat(_constants.cssVar.color.text.default, ")"),
  cursor: 'default'
});
var interactiveStyles = (0, _react2.css)({
  '&:hover': {
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values, @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
    backgroundColor: "var(".concat(_constants.cssVar.color.background.hover, ")")
  },
  '&:active': {
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values, @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
    backgroundColor: "var(".concat(_constants.cssVar.color.background.active, ")")
  }
});
var focusRingStyles = (0, _react2.css)({
  '&:focus-within': {
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values, @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
    boxShadow: "0 0 0 2px var(".concat(_constants.cssVar.color.focusRing, ")"),
    outline: 'none'
  }
});
var nonStandardLinkStyles = (0, _react2.css)({
  '&:active': {
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values, @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
    color: "var(".concat(_constants.cssVar.color.text.active, ")")
  }
});
var BaseTag = /*#__PURE__*/_react.default.forwardRef(function BaseTag(_ref, ref) {
  var _objectSpread2;
  var before = _ref.before,
    contentElement = _ref.contentElement,
    after = _ref.after,
    testId = _ref.testId,
    _ref$appearance = _ref.appearance,
    appearance = _ref$appearance === void 0 ? 'default' : _ref$appearance,
    style = _ref.style,
    _ref$color = _ref.color,
    color = _ref$color === void 0 ? 'standard' : _ref$color,
    href = _ref.href,
    className = _ref.className,
    other = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  var isLink = Boolean(href);
  var isRemovable = Boolean(after);
  var isInteractive = isLink || isRemovable;
  var isStandardLink = isLink && color === 'standard';

  // Change link text color if  the tag is standard color
  var textLinkColors = isStandardLink ? styles.textColors['standardLink'] : styles.textColors[color];
  var backgroundHoverColors = isRemovable && !isLink ? styles.backgroundColors[color] : styles.linkHoverBackgroundColors[color];
  var backgroundActiveColors = isRemovable && !isLink ? styles.backgroundColors[color] : styles.linkActiveBackgroundColors[color];
  return (0, _react2.jsx)("span", (0, _extends2.default)({}, other, {
    ref: ref,
    css: [baseStyles, (isRemovable || isLink) && focusRingStyles, isLink && !isStandardLink && nonStandardLinkStyles, isInteractive && interactiveStyles],
    style: _objectSpread((_objectSpread2 = {}, (0, _defineProperty2.default)(_objectSpread2, _constants.cssVar.color.text.default, styles.textColors[color]), (0, _defineProperty2.default)(_objectSpread2, _constants.cssVar.color.text.hover, styles.textHoverColors[color]), (0, _defineProperty2.default)(_objectSpread2, _constants.cssVar.color.text.active, styles.textActiveColors[color]), (0, _defineProperty2.default)(_objectSpread2, _constants.cssVar.color.text.link, textLinkColors), (0, _defineProperty2.default)(_objectSpread2, _constants.cssVar.color.background.default, styles.backgroundColors[color]), (0, _defineProperty2.default)(_objectSpread2, _constants.cssVar.color.background.hover, backgroundHoverColors), (0, _defineProperty2.default)(_objectSpread2, _constants.cssVar.color.background.active, backgroundActiveColors), (0, _defineProperty2.default)(_objectSpread2, _constants.cssVar.color.focusRing, styles.focusRingColors), (0, _defineProperty2.default)(_objectSpread2, _constants.cssVar.color.removeButton.default, styles.removeButtonColors[color]), (0, _defineProperty2.default)(_objectSpread2, _constants.cssVar.color.removeButton.hover, styles.removeButtonHoverColors[color]), (0, _defineProperty2.default)(_objectSpread2, _constants.cssVar.borderRadius, styles.borderRadius[appearance]), _objectSpread2), style)
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-classname-prop -- Ignored via go/DSP-18766
    ,
    className: className,
    "data-testid": testId
  }), before, contentElement, after);
});

// eslint-disable-next-line @repo/internal/react/require-jsdoc
var _default = exports.default = BaseTag;