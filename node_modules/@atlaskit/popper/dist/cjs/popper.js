"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Popper = Popper;
Object.defineProperty(exports, "placements", {
  enumerable: true,
  get: function get() {
    return _core.placements;
  }
});
var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = _interopRequireWildcard(require("react"));
var _reactPopper = require("react-popper");
var _core = require("@popperjs/core");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
// Export types from PopperJS / React Popper

var constantModifiers = [{
  name: 'flip',
  options: {
    flipVariations: false,
    padding: 5,
    boundary: 'clippingParents',
    rootBoundary: 'viewport'
  }
}, {
  name: 'preventOverflow',
  options: {
    padding: 5,
    rootBoundary: 'document'
  }
}];
function defaultChildrenFn() {
  return null;
}
var defaultOffset = [0, 8];
function Popper(_ref) {
  var _ref$children = _ref.children,
    children = _ref$children === void 0 ? defaultChildrenFn : _ref$children,
    _ref$offset = _ref.offset,
    offset = _ref$offset === void 0 ? defaultOffset : _ref$offset,
    _ref$placement = _ref.placement,
    placement = _ref$placement === void 0 ? 'bottom-start' : _ref$placement,
    _ref$referenceElement = _ref.referenceElement,
    referenceElement = _ref$referenceElement === void 0 ? undefined : _ref$referenceElement,
    modifiers = _ref.modifiers,
    _ref$strategy = _ref.strategy,
    strategy = _ref$strategy === void 0 ? 'fixed' : _ref$strategy;
  var _offset = (0, _slicedToArray2.default)(offset, 2),
    offsetX = _offset[0],
    offsetY = _offset[1];
  // Merge a new offset modifier only if new offset values passed in
  var internalModifiers = (0, _react.useMemo)(function () {
    var offsetModifier = {
      name: 'offset',
      options: {
        offset: [offsetX, offsetY]
      }
    };
    return [].concat(constantModifiers, [offsetModifier]);
  }, [offsetX, offsetY]);

  // Merge custom props and memoize
  var mergedModifiers = (0, _react.useMemo)(function () {
    if (modifiers == null) {
      return internalModifiers;
    }
    return [].concat((0, _toConsumableArray2.default)(internalModifiers), (0, _toConsumableArray2.default)(modifiers));
  }, [internalModifiers, modifiers]);
  return /*#__PURE__*/_react.default.createElement(_reactPopper.Popper
  // @ts-expect-error - No overload matches this call
  // This error was introduced after upgrading to TypeScript 5
  , {
    modifiers: mergedModifiers,
    placement: placement,
    strategy: strategy,
    referenceElement: referenceElement
  }, children);
}