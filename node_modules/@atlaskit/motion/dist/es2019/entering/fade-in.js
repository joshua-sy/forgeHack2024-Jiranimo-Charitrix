import React from 'react';

// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766

import { easeInOut } from '../utils/curves';
import { largeDurationMs } from '../utils/durations';
import KeyframesMotion from './keyframes-motion';
const directionMotions = {
  proportional: {
    bottom: 'translate3d(0, calc(5% + 4px), 0)',
    left: 'translate3d(calc(-5% - 4px), 0, 0)',
    right: 'translate3d(calc(5% + 4px), 0, 0)',
    top: 'translate3d(0, calc(-5% - 4px), 0)'
  },
  constant: {
    bottom: 'translate3d(0, 4px, 0)',
    left: 'translate3d(-4px, 0, 0)',
    right: 'translate3d(4px, 0, 0)',
    top: 'translate3d(0, -4px, 0)'
  }
};
const invertedDirection = {
  top: 'bottom',
  bottom: 'top',
  left: 'right',
  right: 'left'
};
export const fadeInAnimation = (direction, distance = 'proportional') => {
  return {
    from: {
      opacity: 0,
      ...(direction !== undefined && {
        transform: directionMotions[distance][direction]
      })
    },
    '50%': {
      opacity: 1
    },
    to: {
      transform: direction !== undefined ? 'none' : undefined
    }
  };
};
export const fadeOutAnimation = (direction, distance = 'proportional') => ({
  from: {
    opacity: 1,
    transform: direction !== undefined ? 'translate3d(0, 0, 0)' : undefined
  },
  to: {
    opacity: 0,
    ...(direction !== undefined && {
      transform: directionMotions[distance][direction]
    })
  }
});

/**
 * Props for controlling the behavior of the FadeIn animation
 */

/**
 * __FadeIn__
 *
 * Useful for fading in one or more elements.
 *
 * - [Examples](https://atlaskit.atlassian.com/packages/design-system/motion/docs/entering-motions)
 */
const FadeIn = ({
  children,
  duration = largeDurationMs,
  entranceDirection,
  exitDirection,
  distance = 'proportional',
  onFinish,
  isPaused
}) => {
  const invertedEntranceDirection = entranceDirection && invertedDirection[entranceDirection];
  return /*#__PURE__*/React.createElement(KeyframesMotion, {
    duration: duration,
    enteringAnimation: fadeInAnimation(entranceDirection, distance),
    exitingAnimation: fadeOutAnimation(exitDirection || invertedEntranceDirection, distance),
    animationTimingFunction: () => easeInOut,
    onFinish: onFinish,
    isPaused: isPaused
  }, children);
};
export default FadeIn;