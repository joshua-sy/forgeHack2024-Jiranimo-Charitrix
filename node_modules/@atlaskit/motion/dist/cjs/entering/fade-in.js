"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.fadeOutAnimation = exports.fadeInAnimation = exports.default = void 0;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _react = _interopRequireDefault(require("react"));
var _curves = require("../utils/curves");
var _durations = require("../utils/durations");
var _keyframesMotion = _interopRequireDefault(require("./keyframes-motion"));
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; } // eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766
var directionMotions = {
  proportional: {
    bottom: 'translate3d(0, calc(5% + 4px), 0)',
    left: 'translate3d(calc(-5% - 4px), 0, 0)',
    right: 'translate3d(calc(5% + 4px), 0, 0)',
    top: 'translate3d(0, calc(-5% - 4px), 0)'
  },
  constant: {
    bottom: 'translate3d(0, 4px, 0)',
    left: 'translate3d(-4px, 0, 0)',
    right: 'translate3d(4px, 0, 0)',
    top: 'translate3d(0, -4px, 0)'
  }
};
var invertedDirection = {
  top: 'bottom',
  bottom: 'top',
  left: 'right',
  right: 'left'
};
var fadeInAnimation = exports.fadeInAnimation = function fadeInAnimation(direction) {
  var distance = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'proportional';
  return {
    from: _objectSpread({
      opacity: 0
    }, direction !== undefined && {
      transform: directionMotions[distance][direction]
    }),
    '50%': {
      opacity: 1
    },
    to: {
      transform: direction !== undefined ? 'none' : undefined
    }
  };
};
var fadeOutAnimation = exports.fadeOutAnimation = function fadeOutAnimation(direction) {
  var distance = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'proportional';
  return {
    from: {
      opacity: 1,
      transform: direction !== undefined ? 'translate3d(0, 0, 0)' : undefined
    },
    to: _objectSpread({
      opacity: 0
    }, direction !== undefined && {
      transform: directionMotions[distance][direction]
    })
  };
};

/**
 * Props for controlling the behavior of the FadeIn animation
 */

/**
 * __FadeIn__
 *
 * Useful for fading in one or more elements.
 *
 * - [Examples](https://atlaskit.atlassian.com/packages/design-system/motion/docs/entering-motions)
 */
var FadeIn = function FadeIn(_ref) {
  var children = _ref.children,
    _ref$duration = _ref.duration,
    duration = _ref$duration === void 0 ? _durations.largeDurationMs : _ref$duration,
    entranceDirection = _ref.entranceDirection,
    exitDirection = _ref.exitDirection,
    _ref$distance = _ref.distance,
    distance = _ref$distance === void 0 ? 'proportional' : _ref$distance,
    onFinish = _ref.onFinish,
    isPaused = _ref.isPaused;
  var invertedEntranceDirection = entranceDirection && invertedDirection[entranceDirection];
  return /*#__PURE__*/_react.default.createElement(_keyframesMotion.default, {
    duration: duration,
    enteringAnimation: fadeInAnimation(entranceDirection, distance),
    exitingAnimation: fadeOutAnimation(exitDirection || invertedEntranceDirection, distance),
    animationTimingFunction: function animationTimingFunction() {
      return _curves.easeInOut;
    },
    onFinish: onFinish,
    isPaused: isPaused
  }, children);
};
var _default = exports.default = FadeIn;