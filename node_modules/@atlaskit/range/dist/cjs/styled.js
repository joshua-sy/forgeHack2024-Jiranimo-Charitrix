"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Input = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _react = require("react");
var _react2 = require("@emotion/react");
var theme = _interopRequireWildcard(require("./theme"));
var _excluded = ["valuePercent", "style"];
var _hoverNotDisabled, _css;
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; } /**
 * @jsxRuntime classic
 */ /** @jsx jsx */ // eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766
var VAR_THUMB_BORDER_COLOR = '--thumb-border';
var VAR_THUMB_SHADOW = '--thumb-shadow';
var VAR_THUMB_BACKGROUND_COLOR = '--thumb-bg';
var VAR_TRACK_BACKGROUND_COLOR = '--track-bg';
var VAR_TRACK_FOREGROUND_COLOR = '--track-fg';
var VAR_TRACK_FOREGROUND_WIDTH = '--track-fg-width';
var sliderThumbStyles = {
  boxSizing: 'border-box',
  width: theme.thumb.size,
  height: theme.thumb.size,
  border: 'none',
  background: "var(".concat(VAR_THUMB_BACKGROUND_COLOR, ", ").concat(theme.thumb.background.default, ")"),
  // adapted from @atlaskit/focus-ring
  outline: "solid 2px var(".concat(VAR_THUMB_BORDER_COLOR, ")"),
  outlineOffset: '2px',
  borderRadius: "var(--ds-border-radius-circle, 50%)",
  boxShadow: "var(".concat(VAR_THUMB_SHADOW, ")"),
  cursor: 'pointer',
  // Different implicit behavior across browsers -> making it explicit.
  transition: "background-color ".concat(theme.transitionDuration, " ease-in-out")
};
var sliderTrackStyles = {
  borderRadius: theme.track.borderRadius,
  border: 0,
  cursor: 'pointer',
  height: theme.track.height,
  width: '100%',
  transition: "background-color ".concat(theme.transitionDuration, " ease-in-out")
};

// Styles are split per browser as they are implemented differently
// Cannot consolidate as Chrome & Firefox don't recognise styles if they are grouped
// with CSS selectors they don't recognise, e.g. &::-ms-thumb
var browserStyles = {
  webkit: (0, _react2.css)({
    WebkitAppearance: 'none',
    // Hides the slider so that custom slider can be made
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-selectors -- Ignored via go/DSP-18766
    '::-webkit-slider-thumb': _objectSpread(_objectSpread({}, sliderThumbStyles), {}, {
      // eslint-disable-next-line @atlaskit/design-system/ensure-design-token-usage, @atlaskit/ui-styling-standard/no-unsafe-values, @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
      marginBlockStart: -(theme.thumb.size - theme.track.height) / 2,
      WebkitAppearance: 'none'
    }),
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-selectors -- Ignored via go/DSP-18766
    '::-webkit-slider-runnable-track': _objectSpread(_objectSpread({}, sliderTrackStyles), {}, {
      /**
       * Webkit does not have separate properties for the background/foreground like firefox.
       * Instead we use background layering:
       * - The gray background is a simple background color.
       * - The blue foreground is a 'gradient' (to create a color block) that is sized to the progress.
       *
       * Individual properties have been used over the `background` shorthand for readability.
       */
      backgroundColor: "var(".concat(VAR_TRACK_BACKGROUND_COLOR, ")"),
      backgroundImage: "linear-gradient(var(".concat(VAR_TRACK_FOREGROUND_COLOR, "), var(").concat(VAR_TRACK_FOREGROUND_COLOR, "))"),
      backgroundRepeat: 'no-repeat',
      backgroundSize: "var(".concat(VAR_TRACK_FOREGROUND_WIDTH, ") 100%"),
      // eslint-disable-next-line @atlaskit/design-system/no-nested-styles, @atlaskit/ui-styling-standard/no-nested-selectors, @atlaskit/ui-styling-standard/no-unsafe-selectors -- Ignored via go/DSP-18766
      '[dir="rtl"] &': {
        backgroundPosition: 'right'
      }
    }),
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-selectors -- Ignored via go/DSP-18766
    ':disabled': {
      // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-selectors -- Ignored via go/DSP-18766
      '::-webkit-slider-thumb, ::-webkit-slider-runnable-track': {
        cursor: 'not-allowed'
      }
    }
  }),
  firefox: (0, _react2.css)({
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
    '::-moz-range-thumb': sliderThumbStyles,
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-selectors -- Ignored via go/DSP-18766
    '::-moz-focus-outer': {
      border: 0
    },
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-selectors -- Ignored via go/DSP-18766
    '::-moz-range-progress': _objectSpread(_objectSpread({}, sliderTrackStyles), {}, {
      background: "var(".concat(VAR_TRACK_FOREGROUND_COLOR, ")")
    }),
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-selectors -- Ignored via go/DSP-18766
    '::-moz-range-track': _objectSpread(_objectSpread({}, sliderTrackStyles), {}, {
      background: "var(".concat(VAR_TRACK_BACKGROUND_COLOR, ")")
    }),
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-selectors -- Ignored via go/DSP-18766
    ':disabled': {
      // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-selectors -- Ignored via go/DSP-18766
      '::-moz-range-thumb, ::-moz-range-progress, ::-moz-range-track': {
        cursor: 'not-allowed'
      }
    }
  })
};
var baseStyles = (0, _react2.css)({
  width: '100%',
  // Has a fixed width by default
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values, @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
  height: theme.input.height,
  // Otherwise thumb will collide with previous box element
  background: 'transparent',
  // Otherwise white
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-selectors -- Ignored via go/DSP-18766
  ':focus': {
    outline: 'none'
  },
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-selectors -- Ignored via go/DSP-18766
  ':disabled': {
    cursor: 'not-allowed',
    opacity: "var(--ds-opacity-disabled, 0.4)"
  }
});
var themeStyles = (0, _react2.css)((_css = {}, (0, _defineProperty2.default)(_css, VAR_THUMB_SHADOW, theme.thumb.boxShadow.default), (0, _defineProperty2.default)(_css, VAR_TRACK_BACKGROUND_COLOR, theme.track.background.default), (0, _defineProperty2.default)(_css, VAR_TRACK_FOREGROUND_COLOR, theme.track.foreground.default), (0, _defineProperty2.default)(_css, ':hover:not(:disabled)', (_hoverNotDisabled = {}, (0, _defineProperty2.default)(_hoverNotDisabled, VAR_THUMB_BACKGROUND_COLOR, theme.thumb.background.hovered), (0, _defineProperty2.default)(_hoverNotDisabled, VAR_TRACK_BACKGROUND_COLOR, theme.track.background.hovered), (0, _defineProperty2.default)(_hoverNotDisabled, VAR_TRACK_FOREGROUND_COLOR, theme.track.foreground.hovered), _hoverNotDisabled)), (0, _defineProperty2.default)(_css, ':active:not(:disabled)', (0, _defineProperty2.default)({}, VAR_THUMB_BACKGROUND_COLOR, theme.thumb.background.pressed)), (0, _defineProperty2.default)(_css, ':focus-visible', (0, _defineProperty2.default)({}, VAR_THUMB_BORDER_COLOR, theme.thumb.borderColor.focused)), _css));

/**
 * __Input__
 * Internal-only styled input component.
 */
var Input = exports.Input = /*#__PURE__*/(0, _react.forwardRef)(function (props, ref) {
  var valuePercent = props.valuePercent,
    style = props.style,
    strippedProps = (0, _objectWithoutProperties2.default)(props, _excluded);
  return (0, _react2.jsx)("input", (0, _extends2.default)({}, strippedProps, {
    // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop -- Ignored via go/DSP-18766
    style: (0, _defineProperty2.default)({}, VAR_TRACK_FOREGROUND_WIDTH, "".concat(valuePercent, "%")),
    ref: ref,
    css: [baseStyles, browserStyles.webkit, browserStyles.firefox, themeStyles]
  }));
});
Input.displayName = 'InputRange';