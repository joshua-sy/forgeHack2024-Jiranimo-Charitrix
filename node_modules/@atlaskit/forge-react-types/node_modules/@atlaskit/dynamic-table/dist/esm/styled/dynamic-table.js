import _extends from "@babel/runtime/helpers/extends";
import _defineProperty from "@babel/runtime/helpers/defineProperty";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
var _excluded = ["isFixedSize", "hasDataRow", "children", "testId", "isLoading"];
/* eslint-disable @repo/internal/react/require-jsdoc */
/**
 * @jsxRuntime classic
 */
/** @jsx jsx */
import { forwardRef } from 'react';

// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766
import { css, jsx } from '@emotion/react';
import { getBooleanFF } from '@atlaskit/platform-feature-flags';
import { row, tableBorder } from '../theme';
// CSS vars for table row
// these are declared here to avoid being re-declared in each table row
export var tableRowCSSVars = {
  CSS_VAR_HOVER_BACKGROUND: '--local-dynamic-table-hover-bg',
  CSS_VAR_HIGHLIGHTED_BACKGROUND: '--local-dynamic-table-highlighted-bg',
  CSS_VAR_HOVER_HIGHLIGHTED_BACKGROUND: '--local-dynamic-table-hover-highlighted-bg',
  CSS_VAR_ROW_FOCUS_OUTLINE: '--local-dynamic-table-row-focus-outline'
};
var fixedSizeTableStyles = css({
  tableLayout: 'fixed'
});
var tableStyles = css({
  width: '100%',
  borderCollapse: 'separate',
  borderSpacing: '0px'
});
var bodyBorder = css({
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values, @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
  borderBlockEnd: "2px solid ".concat(tableBorder.borderColor)
});
export var Table = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var _ref2;
  var isFixedSize = _ref.isFixedSize,
    hasDataRow = _ref.hasDataRow,
    children = _ref.children,
    testId = _ref.testId,
    isLoading = _ref.isLoading,
    rest = _objectWithoutProperties(_ref, _excluded);
  return jsx("table", _extends({
    inert: isLoading ? '' : undefined,
    // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop -- Ignored via go/DSP-18766
    style: (_ref2 = {}, _defineProperty(_ref2, tableRowCSSVars.CSS_VAR_HOVER_BACKGROUND, row.hoverBackground), _defineProperty(_ref2, tableRowCSSVars.CSS_VAR_HIGHLIGHTED_BACKGROUND, row.highlightedBackground), _defineProperty(_ref2, tableRowCSSVars.CSS_VAR_HOVER_HIGHLIGHTED_BACKGROUND, row.hoverHighlightedBackground), _defineProperty(_ref2, tableRowCSSVars.CSS_VAR_ROW_FOCUS_OUTLINE, row.focusOutline), _ref2),
    css: [tableStyles, isFixedSize && fixedSizeTableStyles, hasDataRow && bodyBorder],
    ref: ref
  }, rest, {
    "data-testid": testId && "".concat(testId, "--table")
  }), children);
});
var captionStyles = css({
  font: "var(--ds-font-heading-medium, normal 500 20px/24px ui-sans-serif, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Ubuntu, system-ui, \"Helvetica Neue\", sans-serif)",
  marginBlockEnd: "var(--ds-space-100, 8px)",
  willChange: 'transform'
});
var oldCaptionStyles = css({
  fontWeight: "var(--ds-font-weight-regular, 400)",
  // eslint-disable-next-line @atlaskit/design-system/use-tokens-space
  marginBlockStart: 28
});
var newCaptionStyles = css({
  marginBlockStart: "var(--ds-space-300, 24px)"
});
export var Caption = function Caption(_ref3) {
  var children = _ref3.children;
  return jsx("caption", {
    css: [captionStyles,
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
    getBooleanFF('platform.design-system-team.dynamic-table-typography_7zio6') ? newCaptionStyles : oldCaptionStyles]
  }, children);
};
var paginationWrapperStyles = css({
  display: 'flex',
  justifyContent: 'center'
});
export var PaginationWrapper = function PaginationWrapper(_ref4) {
  var children = _ref4.children,
    testId = _ref4.testId;
  return jsx("div", {
    css: paginationWrapperStyles,
    "data-testid": testId && "".concat(testId, "--pagination--container")
  }, children);
};