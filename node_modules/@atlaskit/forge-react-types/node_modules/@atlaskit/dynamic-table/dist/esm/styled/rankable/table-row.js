import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
var _excluded = ["isRanking", "isRankingItem", "testId"];
/**
 * @jsxRuntime classic
 */
/** @jsx jsx */
import { forwardRef } from 'react';

// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766
import { css, jsx } from '@emotion/react';
import { B100, N20, N50A, N60A } from '@atlaskit/theme/colors';
import { TableBodyRow } from '../table-row';
var rankingStyles = css({
  display: 'block'
});
var rankingItemStyles = css({
  backgroundColor: "var(--ds-surface-overlay, ".concat(N20, ")"),
  borderRadius: "var(--ds-border-radius-050, 2px)",
  boxShadow: "var(--ds-shadow-overlay, ".concat("0 20px 32px -8px ".concat(N50A, ", 0 0 1px ").concat(N60A), ")")
});
var draggableStyles = css({
  outlineWidth: "var(--ds-border-width, 2px)",
  '&:focus-visible': {
    outlineColor: "var(--ds-border-focused, ".concat(B100, ")"),
    outlineStyle: 'solid'
  }
});

// eslint-disable-next-line @repo/internal/react/require-jsdoc
export var RankableTableBodyRow = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var isRanking = _ref.isRanking,
    isRankingItem = _ref.isRankingItem,
    testId = _ref.testId,
    props = _objectWithoutProperties(_ref, _excluded);
  return jsx(TableBodyRow, _extends({
    css: [isRanking && rankingStyles, isRankingItem && rankingItemStyles, draggableStyles],
    ref: ref,
    testId: testId
  }, props));
});