"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SpinnerContainer = exports.ContentsContainer = exports.Container = exports.CSS_VAR_CONTENTS_OPACITY = void 0;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _react = require("@emotion/react");
/* eslint-disable @repo/internal/react/require-jsdoc */
/**
 * @jsxRuntime classic
 */
/** @jsx jsx */

// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766

var CSS_VAR_CONTENTS_OPACITY = exports.CSS_VAR_CONTENTS_OPACITY = '--contents-opacity';
var containerStyles = (0, _react.css)({
  position: 'relative'
});
var Container = exports.Container = function Container(_ref) {
  var children = _ref.children,
    testId = _ref.testId;
  return (0, _react.jsx)("div", {
    css: containerStyles,
    "data-testid": testId && "".concat(testId, "--container")
  }, children);
};
var contentsContainerStyles = (0, _react.css)({
  opacity: "var(".concat(CSS_VAR_CONTENTS_OPACITY, ")"),
  pointerEvents: 'none'
});
var ContentsContainer = exports.ContentsContainer = function ContentsContainer(_ref2) {
  var children = _ref2.children,
    contentsOpacity = _ref2.contentsOpacity,
    testId = _ref2.testId;
  return (0, _react.jsx)("div", {
    // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop -- Ignored via go/DSP-18766
    style: (0, _defineProperty2.default)({}, CSS_VAR_CONTENTS_OPACITY, contentsOpacity),
    css: [contentsContainerStyles],
    "data-testid": testId && "".concat(testId, "--contents--container")
  }, children);
};
var spinnerContainerStyles = (0, _react.css)({
  display: 'flex',
  position: 'absolute',
  inset: 0,
  alignItems: 'center',
  justifyContent: 'center'
});
var SpinnerContainer = exports.SpinnerContainer = function SpinnerContainer(_ref4) {
  var children = _ref4.children,
    testId = _ref4.testId;
  return (0, _react.jsx)("div", {
    css: spinnerContainerStyles,
    "data-testid": testId && "".concat(testId, "--spinner--container")
  }, children);
};