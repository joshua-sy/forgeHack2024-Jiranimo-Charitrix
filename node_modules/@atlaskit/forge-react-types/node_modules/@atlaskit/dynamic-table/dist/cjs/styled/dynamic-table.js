"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.tableRowCSSVars = exports.Table = exports.PaginationWrapper = exports.Caption = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var _react = require("react");
var _react2 = require("@emotion/react");
var _platformFeatureFlags = require("@atlaskit/platform-feature-flags");
var _theme = require("../theme");
var _excluded = ["isFixedSize", "hasDataRow", "children", "testId", "isLoading"];
/* eslint-disable @repo/internal/react/require-jsdoc */
/**
 * @jsxRuntime classic
 */
/** @jsx jsx */
// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766
// CSS vars for table row
// these are declared here to avoid being re-declared in each table row
var tableRowCSSVars = exports.tableRowCSSVars = {
  CSS_VAR_HOVER_BACKGROUND: '--local-dynamic-table-hover-bg',
  CSS_VAR_HIGHLIGHTED_BACKGROUND: '--local-dynamic-table-highlighted-bg',
  CSS_VAR_HOVER_HIGHLIGHTED_BACKGROUND: '--local-dynamic-table-hover-highlighted-bg',
  CSS_VAR_ROW_FOCUS_OUTLINE: '--local-dynamic-table-row-focus-outline'
};
var fixedSizeTableStyles = (0, _react2.css)({
  tableLayout: 'fixed'
});
var tableStyles = (0, _react2.css)({
  width: '100%',
  borderCollapse: 'separate',
  borderSpacing: '0px'
});
var bodyBorder = (0, _react2.css)({
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values, @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
  borderBlockEnd: "2px solid ".concat(_theme.tableBorder.borderColor)
});
var Table = exports.Table = /*#__PURE__*/(0, _react.forwardRef)(function (_ref, ref) {
  var _ref2;
  var isFixedSize = _ref.isFixedSize,
    hasDataRow = _ref.hasDataRow,
    children = _ref.children,
    testId = _ref.testId,
    isLoading = _ref.isLoading,
    rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  return (0, _react2.jsx)("table", (0, _extends2.default)({
    inert: isLoading ? '' : undefined,
    // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop -- Ignored via go/DSP-18766
    style: (_ref2 = {}, (0, _defineProperty2.default)(_ref2, tableRowCSSVars.CSS_VAR_HOVER_BACKGROUND, _theme.row.hoverBackground), (0, _defineProperty2.default)(_ref2, tableRowCSSVars.CSS_VAR_HIGHLIGHTED_BACKGROUND, _theme.row.highlightedBackground), (0, _defineProperty2.default)(_ref2, tableRowCSSVars.CSS_VAR_HOVER_HIGHLIGHTED_BACKGROUND, _theme.row.hoverHighlightedBackground), (0, _defineProperty2.default)(_ref2, tableRowCSSVars.CSS_VAR_ROW_FOCUS_OUTLINE, _theme.row.focusOutline), _ref2),
    css: [tableStyles, isFixedSize && fixedSizeTableStyles, hasDataRow && bodyBorder],
    ref: ref
  }, rest, {
    "data-testid": testId && "".concat(testId, "--table")
  }), children);
});
var captionStyles = (0, _react2.css)({
  font: "var(--ds-font-heading-medium, normal 500 20px/24px ui-sans-serif, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Ubuntu, system-ui, \"Helvetica Neue\", sans-serif)",
  marginBlockEnd: "var(--ds-space-100, 8px)",
  willChange: 'transform'
});
var oldCaptionStyles = (0, _react2.css)({
  fontWeight: "var(--ds-font-weight-regular, 400)",
  // eslint-disable-next-line @atlaskit/design-system/use-tokens-space
  marginBlockStart: 28
});
var newCaptionStyles = (0, _react2.css)({
  marginBlockStart: "var(--ds-space-300, 24px)"
});
var Caption = exports.Caption = function Caption(_ref3) {
  var children = _ref3.children;
  return (0, _react2.jsx)("caption", {
    css: [captionStyles,
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
    (0, _platformFeatureFlags.getBooleanFF)('platform.design-system-team.dynamic-table-typography_7zio6') ? newCaptionStyles : oldCaptionStyles]
  }, children);
};
var paginationWrapperStyles = (0, _react2.css)({
  display: 'flex',
  justifyContent: 'center'
});
var PaginationWrapper = exports.PaginationWrapper = function PaginationWrapper(_ref4) {
  var children = _ref4.children,
    testId = _ref4.testId;
  return (0, _react2.jsx)("div", {
    css: paginationWrapperStyles,
    "data-testid": testId && "".concat(testId, "--pagination--container")
  }, children);
};