"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = withDimensions;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _react = _interopRequireDefault(require("react"));
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
// Compute height and width of wrapped component before ranking
function withDimensions(WrappedComponent) {
  return /*#__PURE__*/function (_React$Component) {
    (0, _inherits2.default)(WithDimensions, _React$Component);
    var _super = _createSuper(WithDimensions);
    function WithDimensions() {
      var _this;
      (0, _classCallCheck2.default)(this, WithDimensions);
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      _this = _super.call.apply(_super, [this].concat(args));
      (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "state", {
        refWidth: 0,
        refHeight: 0
      });
      (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "innerRef", function (ref) {
        if (ref && !_this.props.isRanking) {
          _this.ref = ref;
        }
      });
      (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "updateDimensions", function () {
        if (!_this.ref) {
          return;
        }
        var clientRect = _this.ref.getBoundingClientRect();
        var width = clientRect.width;
        var height = clientRect.height;
        if (width !== _this.state.refWidth || height !== _this.state.refHeight) {
          _this.setState({
            refWidth: width,
            refHeight: height
          });
        }
      });
      return _this;
    }
    (0, _createClass2.default)(WithDimensions, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(nextProps) {
        var wasRanking = this.props.isRanking;
        var willRanking = nextProps.isRanking;
        if (willRanking && !wasRanking) {
          this.updateDimensions();
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this$state = this.state,
          refWidth = _this$state.refWidth,
          refHeight = _this$state.refHeight;
        return /*#__PURE__*/_react.default.createElement(WrappedComponent
        //@ts-expect-error TODO Fix legit TypeScript 3.9.6 improved inference error
        , (0, _extends2.default)({
          refWidth: refWidth
          //@ts-expect-error TODO Fix legit TypeScript 3.9.6 improved inference error
          ,
          refHeight: refHeight,
          innerRef: this.innerRef
        }, this.props));
      }
    }]);
    return WithDimensions;
  }(_react.default.Component);
}