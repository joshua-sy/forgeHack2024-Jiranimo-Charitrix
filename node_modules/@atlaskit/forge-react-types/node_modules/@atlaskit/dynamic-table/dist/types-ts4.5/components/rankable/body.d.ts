import React from 'react';
import { type DragStart, type DropResult } from 'react-beautiful-dnd';
import { type WithSortedPageRowsProps } from '../../hoc/with-sorted-page-rows';
import { type HeadType, type RankEnd, type RankStart } from '../../types';
export interface RankableBodyProps extends WithSortedPageRowsProps {
    highlightedRowIndex?: number | number[];
    onRankStart: (rankStart: RankStart) => void;
    onRankEnd: (rankEnd: RankEnd) => void;
    isFixedSize: boolean;
    isRanking: boolean;
    isRankingDisabled: boolean;
    head?: HeadType;
    testId?: string;
    forwardedRef?: React.Ref<HTMLTableSectionElement>;
}
export declare class RankableBody extends React.Component<RankableBodyProps, {}> {
    onBeforeDragStart: (dragStart: DragStart) => void;
    onDragEnd: (result: DropResult) => void;
    render(): JSX.Element;
}
declare const _default: React.ForwardRefExoticComponent<Omit<RankableBodyProps & import("../../hoc/with-sorted-page-rows").TableProps, "pageRows"> & {
    forwardedRef?: React.Ref<HTMLTableSectionElement> | undefined;
} & React.RefAttributes<HTMLTableSectionElement>>;
export default _default;
