"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "ClearIndicator", {
  enumerable: true,
  get: function get() {
    return _indicators.ClearIndicator;
  }
});
Object.defineProperty(exports, "DropdownIndicator", {
  enumerable: true,
  get: function get() {
    return _indicators.DropdownIndicator;
  }
});
exports.IndicatorSeparator = void 0;
Object.defineProperty(exports, "LoadingIndicator", {
  enumerable: true,
  get: function get() {
    return _indicators.LoadingIndicator;
  }
});
exports.MultiValueRemove = void 0;
var _react = require("@emotion/react");
var _selectClear = _interopRequireDefault(require("@atlaskit/icon/glyph/select-clear"));
var _reactSelect = require("react-select");
var _indicators = require("./indicators");
/**
 * @jsxRuntime classic
 */
/** @jsx jsx */
// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766

var disabledStyles = (0, _react.css)({
  display: 'none'
});
var enabledStyles = (0, _react.css)({
  display: 'inherit'
});
var MultiValueRemove = exports.MultiValueRemove = function MultiValueRemove(props) {
  var isDisabled = props.selectProps.isDisabled;
  return (0, _react.jsx)(_reactSelect.components.MultiValueRemove, props, (0, _react.jsx)("div", {
    css: isDisabled ? disabledStyles : enabledStyles,
    "data-testid": isDisabled ? 'hide-clear-icon' : 'show-clear-icon'
  }, (0, _react.jsx)(_selectClear.default, {
    label: "Clear",
    size: "small",
    primaryColor: "transparent",
    secondaryColor: "inherit"
  })));
};
var IndicatorSeparator = exports.IndicatorSeparator = null;