"use strict";

var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireWildcard(require("react"));
var _primitives = require("@atlaskit/primitives");
var _utils = require("./internal/utils");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
var boxStyles = (0, _primitives.xcss)({
  borderRadius: 'border.radius.200',
  display: 'inline-flex',
  blockSize: 'min-content',
  flexShrink: 0 // Text component can wrap text, this ensures it doesn't wrap in flex containers.
});

/**
 * __Badge__
 *
 * This component gives you the full badge functionality and automatically formats the number you provide in \`children\`.
 *
 * - [Examples](https://atlassian.design/components/badge/examples)
 * - [Code](https://atlassian.design/components/badge/code)
 * - [Usage](https://atlassian.design/components/badge/usage)
 */
var Badge = /*#__PURE__*/(0, _react.memo)(function Badge(_ref) {
  var _ref$appearance = _ref.appearance,
    appearance = _ref$appearance === void 0 ? 'default' : _ref$appearance,
    _ref$children = _ref.children,
    children = _ref$children === void 0 ? 0 : _ref$children,
    _ref$max = _ref.max,
    max = _ref$max === void 0 ? 99 : _ref$max,
    style = _ref.style,
    testId = _ref.testId;
  return /*#__PURE__*/_react.default.createElement(_primitives.Box, {
    testId: testId,
    as: "span",
    backgroundColor: backgroundColors[appearance],
    xcss: boxStyles,
    style: {
      background: style === null || style === void 0 ? void 0 : style.backgroundColor,
      color: style === null || style === void 0 ? void 0 : style.color
    },
    paddingInline: "space.075"
  }, /*#__PURE__*/_react.default.createElement(_primitives.Text, {
    size: "UNSAFE_small",
    align: "center",
    color: style !== null && style !== void 0 && style.color ? 'inherit' : textColors[appearance]
  }, typeof children === 'number' && max ? (0, _utils.formatValue)(children, max) : children));
});
Badge.displayName = 'Badge';
var _default = exports.default = Badge;
var backgroundColors = {
  added: 'color.background.success',
  default: 'color.background.neutral',
  important: 'color.background.danger.bold',
  primary: 'color.background.brand.bold',
  primaryInverted: 'elevation.surface',
  removed: 'color.background.danger'
};
var textColors = {
  added: 'color.text.success',
  default: 'color.text',
  important: 'color.text.inverse',
  primary: 'color.text.inverse',
  primaryInverted: 'color.text.brand',
  removed: 'color.text.danger'
};