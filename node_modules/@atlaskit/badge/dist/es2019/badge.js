import React, { memo } from 'react';
import { Box, Text, xcss } from '@atlaskit/primitives';
import { formatValue } from './internal/utils';
const boxStyles = xcss({
  borderRadius: 'border.radius.200',
  display: 'inline-flex',
  blockSize: 'min-content',
  flexShrink: 0 // Text component can wrap text, this ensures it doesn't wrap in flex containers.
});

/**
 * __Badge__
 *
 * This component gives you the full badge functionality and automatically formats the number you provide in \`children\`.
 *
 * - [Examples](https://atlassian.design/components/badge/examples)
 * - [Code](https://atlassian.design/components/badge/code)
 * - [Usage](https://atlassian.design/components/badge/usage)
 */
const Badge = /*#__PURE__*/memo(function Badge({
  appearance = 'default',
  children = 0,
  max = 99,
  style,
  testId
}) {
  return /*#__PURE__*/React.createElement(Box, {
    testId: testId,
    as: "span",
    backgroundColor: backgroundColors[appearance],
    xcss: boxStyles,
    style: {
      background: style === null || style === void 0 ? void 0 : style.backgroundColor,
      color: style === null || style === void 0 ? void 0 : style.color
    },
    paddingInline: "space.075"
  }, /*#__PURE__*/React.createElement(Text, {
    size: "UNSAFE_small",
    align: "center",
    color: style !== null && style !== void 0 && style.color ? 'inherit' : textColors[appearance]
  }, typeof children === 'number' && max ? formatValue(children, max) : children));
});
Badge.displayName = 'Badge';
export default Badge;
const backgroundColors = {
  added: 'color.background.success',
  default: 'color.background.neutral',
  important: 'color.background.danger.bold',
  primary: 'color.background.brand.bold',
  primaryInverted: 'elevation.surface',
  removed: 'color.background.danger'
};
const textColors = {
  added: 'color.text.success',
  default: 'color.text',
  important: 'color.text.inverse',
  primary: 'color.text.inverse',
  primaryInverted: 'color.text.brand',
  removed: 'color.text.danger'
};