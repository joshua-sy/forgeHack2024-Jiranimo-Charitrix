"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getTabsStyles = exports.getTabStyles = exports.getTabListStyles = void 0;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _react = require("@emotion/react");
var _colors = require("./colors");
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; } // eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766
var tabInlinePadding = "var(--ds-space-100, 8px)";
var tabBlockPadding = "var(--ds-space-075, 6px)";
var tabInlineMargin = "var(--ds-space-negative-100, -8px)";
// TODO this should probably be `border.width.indicator`
var underlineHeight = "var(--ds-border-width-outline, 2px)";
var getTabPanelStyles = function getTabPanelStyles() {
  return {
    flexGrow: 1,
    /*
       NOTE min-height set to 0% because of Firefox bug
       FF http://stackoverflow.com/questions/28636832/firefox-overflow-y-not-working-with-nested-flexbox
     */
    minHeight: '0%',
    display: 'flex'
  };
};
var getTabsStyles = exports.getTabsStyles = function getTabsStyles() {
  return (
    // eslint-disable-next-line @repo/internal/styles/no-exported-styles
    (0, _react.css)({
      // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
      '& [role="tabpanel"]': getTabPanelStyles(),
      // The hidden attribute doesn't work on flex elements
      // Change display to be none
      // eslint-disable-next-line @atlaskit/design-system/no-nested-styles, @atlaskit/ui-styling-standard/no-nested-selectors -- Ignored via go/DSP-18766
      '& > [hidden]': {
        display: 'none'
      }
    })
  );
};
var tabLineStyles = {
  content: '""',
  borderRadius: "var(--ds-border-radius-050, 2px)",
  bottom: 0,
  margin: 0,
  position: 'absolute',
  width: 'inherit',
  insetInlineStart: tabInlinePadding,
  insetInlineEnd: 0
};
var getTabListStyles = exports.getTabListStyles = function getTabListStyles() {
  return (
    // eslint-disable-next-line @repo/internal/styles/no-exported-styles
    (0, _react.css)({
      // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
      '& [role="tab"]': getTabStyles(),
      fontWeight: "var(--ds-font-weight-medium, 500)",
      marginInlineStart: tabInlineMargin,
      '&::before': _objectSpread(_objectSpread({}, tabLineStyles), {}, {
        height: underlineHeight,
        // This line is not a border so the selected line is visible in high contrast mode
        // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values, @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
        backgroundColor: _colors.tabLineColors.lineColor
      })
    })
  );
};
var getTabStyles = exports.getTabStyles = function getTabStyles() {
  var colors = _colors.tabColors;
  return {
    color: colors.labelColor,
    cursor: 'pointer',
    margin: 0,
    padding: "".concat(tabBlockPadding, " ").concat(tabInlinePadding),
    position: 'relative',
    whiteSpace: 'nowrap',
    overflow: 'hidden',
    textOverflow: 'ellipsis',
    '&:hover': {
      // TODO: interaction states will be reviewed in DSP-1438
      color: colors.hoverLabelColor,
      '&::after': _objectSpread(_objectSpread({}, tabLineStyles), {}, {
        insetInlineEnd: tabInlinePadding,
        borderBottom: "".concat(underlineHeight, " solid ").concat(_colors.tabLineColors.hoveredColor),
        height: 0
      })
    },
    '&:active': {
      // TODO: interaction states will be reviewed in DSP-1438
      color: colors.activeLabelColor,
      '&::after': _objectSpread(_objectSpread({}, tabLineStyles), {}, {
        insetInlineEnd: tabInlinePadding,
        borderBottom: "".concat(underlineHeight, " solid ").concat(_colors.tabLineColors.activeColor),
        height: 0
      })
    },
    '&[aria-selected="true"]': {
      color: colors.selectedColor,
      '&::after': _objectSpread(_objectSpread({}, tabLineStyles), {}, {
        insetInlineEnd: tabInlinePadding,
        // This line is a border so it is visible in high contrast mode
        borderBottom: "".concat(underlineHeight, " solid ").concat(_colors.tabLineColors.selectedColor),
        height: 0
      })
    }
  };
};