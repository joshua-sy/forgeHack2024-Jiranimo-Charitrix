"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = require("react");
var _react2 = require("@emotion/react");
var _noop = _interopRequireDefault(require("@atlaskit/ds-lib/noop"));
var _primitives = require("@atlaskit/primitives");
var _date = require("../styles/date");
/**
 * @jsxRuntime classic
 */
/** @jsx jsx */

// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766

var Date = /*#__PURE__*/(0, _react.memo)( /*#__PURE__*/(0, _react.forwardRef)(function Date(_ref2, _ref) {
  var day = _ref2.children,
    _ref2$isDisabled = _ref2.isDisabled,
    isDisabled = _ref2$isDisabled === void 0 ? false : _ref2$isDisabled,
    _ref2$isFocused = _ref2.isFocused,
    isFocused = _ref2$isFocused === void 0 ? false : _ref2$isFocused,
    _ref2$isToday = _ref2.isToday,
    isToday = _ref2$isToday === void 0 ? false : _ref2$isToday,
    dayLong = _ref2.dayLong,
    month = _ref2.month,
    monthLong = _ref2.monthLong,
    _ref2$onClick = _ref2.onClick,
    onClick = _ref2$onClick === void 0 ? _noop.default : _ref2$onClick,
    _ref2$isPreviouslySel = _ref2.isPreviouslySelected,
    isPreviouslySelected = _ref2$isPreviouslySel === void 0 ? false : _ref2$isPreviouslySel,
    _ref2$isSelected = _ref2.isSelected,
    isSelected = _ref2$isSelected === void 0 ? false : _ref2$isSelected,
    _ref2$isSibling = _ref2.isSibling,
    isSibling = _ref2$isSibling === void 0 ? false : _ref2$isSibling,
    year = _ref2.year,
    shouldSetFocus = _ref2.shouldSetFocus,
    tabIndex = _ref2.tabIndex,
    testId = _ref2.testId;
  var dateRef = (0, _react.useRef)({
    day: day,
    month: month,
    year: year,
    isDisabled: isDisabled
  });
  (0, _react.useEffect)(function () {
    dateRef.current = {
      day: day,
      month: month,
      year: year,
      isDisabled: isDisabled
    };
  }, [day, month, year, isDisabled]);
  var focusRef = (0, _react.useRef)(null);
  (0, _react.useEffect)(function () {
    if (isFocused && shouldSetFocus && focusRef.current) {
      focusRef.current.focus();
    }
  }, [isFocused, shouldSetFocus]);
  var handleClick = (0, _react.useCallback)(function () {
    var _dateRef$current = dateRef.current,
      dayValue = _dateRef$current.day,
      monthValue = _dateRef$current.month,
      yearValue = _dateRef$current.year,
      isDisabledValue = _dateRef$current.isDisabled;
    if (!isDisabledValue) {
      onClick({
        day: dayValue,
        month: monthValue,
        year: yearValue
      });
    }
  }, [onClick]);

  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values, @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
  var dateCellStyles = (0, _react2.css)((0, _date.dateCellStyles)());
  return (0, _react2.jsx)(_primitives.Grid, {
    role: "gridcell",
    alignItems: "center"
  }, (0, _react2.jsx)("button", {
    // eslint-disable-next-line @atlaskit/design-system/consistent-css-prop-usage
    css: dateCellStyles,
    "aria-current": isToday ? 'date' : undefined,
    "aria-disabled": isDisabled || undefined,
    "aria-label": "".concat(day, ", ").concat(dayLong, " ").concat(monthLong, " ").concat(year),
    "aria-pressed": isSelected ? 'true' : 'false',
    tabIndex: isFocused ? tabIndex : -1,
    type: "button",
    onClick: handleClick,
    ref: focusRef,
    "data-disabled": isDisabled || undefined,
    "data-focused": isFocused || undefined,
    "data-prev-selected": isPreviouslySelected || undefined,
    "data-selected": isSelected || undefined,
    "data-sibling": isSibling || undefined,
    "data-today": isToday || undefined,
    "data-testid": testId && (isSelected ? "".concat(testId, "--selected-day") : "".concat(testId, "--day"))
  }, day));
}));
Date.displayName = 'Date';

// eslint-disable-next-line @repo/internal/react/require-jsdoc
var _default = exports.default = Date;