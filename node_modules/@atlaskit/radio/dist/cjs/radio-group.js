"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = RadioGroup;
var _objectDestructuringEmpty2 = _interopRequireDefault(require("@babel/runtime/helpers/objectDestructuringEmpty"));
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = _interopRequireWildcard(require("react"));
var _noop = _interopRequireDefault(require("@atlaskit/ds-lib/noop"));
var _radio = _interopRequireDefault(require("./radio"));
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
var noOptions = [];
function RadioGroup(props) {
  var onChange = props.onChange,
    _props$options = props.options,
    options = _props$options === void 0 ? noOptions : _props$options,
    propValue = props.value,
    defaultValue = props.defaultValue,
    isDisabled = props.isDisabled,
    isRequired = props.isRequired,
    isInvalid = props.isInvalid,
    _props$onInvalid = props.onInvalid,
    onInvalid = _props$onInvalid === void 0 ? _noop.default : _props$onInvalid,
    name = props.name,
    analyticsContext = props.analyticsContext,
    ariaLabelledBy = props['aria-labelledby'],
    testId = props.testId;
  var _useState = (0, _react.useState)(propValue !== undefined ? propValue : defaultValue),
    _useState2 = (0, _slicedToArray2.default)(_useState, 2),
    selectedValue = _useState2[0],
    setSelectedValue = _useState2[1];
  var onRadioChange = (0, _react.useCallback)(function (e, analyticsEvent) {
    setSelectedValue(e.currentTarget.value);
    if (onChange) {
      onChange(e, analyticsEvent);
    }
  }, [onChange]);

  // If propValue is provided than act as a controlled component
  // If not then act as an uncontrolled component using the value from state
  var value = typeof propValue !== 'undefined' ? propValue : selectedValue;
  return /*#__PURE__*/_react.default.createElement("div", {
    role: "radiogroup",
    "aria-labelledby": ariaLabelledBy,
    "data-testid": testId
  }, options.map(function (_ref, index) {
    var optionProps = (0, _extends2.default)({}, ((0, _objectDestructuringEmpty2.default)(_ref), _ref));
    if (typeof isDisabled !== 'undefined') {
      optionProps.isDisabled = isDisabled;
    }
    var isChecked = value !== null && optionProps.value === value;
    return /*#__PURE__*/_react.default.createElement(_radio.default, (0, _extends2.default)({}, optionProps, {
      name: name || optionProps.name,
      key: index,
      onChange: onRadioChange,
      onInvalid: onInvalid,
      isInvalid: isChecked && isInvalid,
      isChecked: isChecked,
      testId: optionProps.testId || testId,
      isRequired: isRequired,
      analyticsContext: analyticsContext
    }));
  }));
}