import memoizeOne from 'memoize-one';
import * as colors from '@atlaskit/theme/colors';
import { codeFontFamily } from '@atlaskit/theme/constants';
// Hardcoded values have been used due to the current color palette not having any
// accessible color options for Teal and Yellow and +20A
const T800 = '#067384';
const Y1100 = '#7A5D1A';
export const getBaseTheme = () => ({
  fontFamily: codeFontFamily(),
  fontFamilyItalic: `SFMono-MediumItalic, ${codeFontFamily()}`,
  backgroundColor: `var(--ds-background-neutral, ${colors.N20})`,
  textColor: `var(--ds-text, ${colors.N800})`,
  lineNumberColor: `var(--ds-text-subtlest, ${colors.N400})`,
  lineNumberBgColor: `var(--ds-background-neutral, ${colors.N30})`
});
export const defaultBaseTheme = getBaseTheme();
export const getColorPalette = memoizeOne(() => {
  return {
    highlightedLineBgColor: `var(--ds-background-neutral, ${colors.N30})`,
    highlightedLineBorderColor: `var(--ds-border-focused, ${colors.B200})`,
    substringColor: `var(--ds-text-subtlest, ${colors.N400})`,
    keywordColor: `var(--ds-text-accent-blue, ${colors.B400})`,
    attributeColor: `var(--ds-text-accent-teal, ${T800})`,
    selectorTagColor: `var(--ds-text-accent-blue, ${colors.B400})`,
    docTagColor: `var(--ds-text-accent-yellow, ${Y1100})`,
    nameColor: `var(--ds-text-accent-blue, ${colors.B400})`,
    builtInColor: `var(--ds-text-accent-blue, ${colors.B400})`,
    literalColor: `var(--ds-text-accent-blue, ${colors.B400})`,
    bulletColor: `var(--ds-text-accent-blue, ${colors.B400})`,
    codeColor: `var(--ds-text-accent-blue, ${colors.B400})`,
    regexpColor: `var(--ds-text-accent-teal, ${T800})`,
    symbolColor: `var(--ds-text-accent-teal, ${T800})`,
    variableColor: `var(--ds-text-accent-teal, ${T800})`,
    templateVariableColor: `var(--ds-text-accent-teal, ${T800})`,
    linkColor: `var(--ds-text-accent-purple, ${colors.P300})`,
    selectorAttributeColor: `var(--ds-text-accent-teal, ${T800})`,
    selectorPseudoColor: `var(--ds-text-accent-teal, ${T800})`,
    typeColor: `var(--ds-text-accent-teal, ${T800})`,
    stringColor: `var(--ds-text-accent-green, ${colors.G500})`,
    selectorIdColor: `var(--ds-text-accent-teal, ${T800})`,
    selectorClassColor: `var(--ds-text-accent-teal, ${T800})`,
    quoteColor: `var(--ds-text-accent-teal, ${T800})`,
    templateTagColor: `var(--ds-text-accent-teal, ${T800})`,
    titleColor: `var(--ds-text-accent-purple, ${colors.P300})`,
    sectionColor: `var(--ds-text-accent-purple, ${colors.P300})`,
    commentColor: `var(--ds-text-subtlest, ${colors.N400})`,
    metaKeywordColor: `var(--ds-text-accent-green, ${colors.G500})`,
    metaColor: `var(--ds-text-subtlest, ${colors.N400})`,
    functionColor: `var(--ds-text, ${colors.N800})`,
    numberColor: `var(--ds-text-accent-blue, ${colors.B400})`,
    prologColor: `var(--ds-text-accent-blue, ${colors.B400})`,
    cdataColor: `var(--ds-text-subtlest, ${colors.N400})`,
    punctuationColor: `var(--ds-text, ${colors.N800})`,
    propertyColor: `var(--ds-text-accent-purple, ${colors.P300})`,
    constantColor: `var(--ds-text-accent-teal, ${T800})`,
    booleanColor: `var(--ds-text-accent-blue, ${colors.B400})`,
    charColor: `var(--ds-text, ${colors.N800})`,
    insertedColor: `var(--ds-text-accent-green, ${colors.G500})`,
    deletedColor: `var(--ds-text-accent-red, ${colors.R500})`,
    operatorColor: `var(--ds-text, ${colors.N800})`,
    atruleColor: `var(--ds-text-accent-green, ${colors.G500})`,
    importantColor: `var(--ds-text-accent-yellow, ${Y1100})`
  };
});
const getTheme = () => ({
  ...getBaseTheme(),
  ...getColorPalette()
});
export default getTheme;