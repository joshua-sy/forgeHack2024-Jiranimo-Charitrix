"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.Legend = exports.Label = void 0;
var _react = require("@emotion/react");
var _platformFeatureFlags = require("@atlaskit/platform-feature-flags");
var _colors = require("@atlaskit/theme/colors");
/**
 * @jsxRuntime classic
 */
/** @jsx jsx */

// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766

var fieldsetLabelStyles = (0, _react.css)({
  display: 'inline-block',
  font: "var(--ds-font-body-UNSAFE_small, normal 400 12px/16px ui-sans-serif, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Ubuntu, system-ui, \"Helvetica Neue\", sans-serif)",
  marginBlockEnd: "var(--ds-space-050, 4px)",
  marginBlockStart: "var(--ds-space-0, 0px)"
});
var oldFieldsetLabelStyles = (0, _react.css)({
  color: "var(--ds-text-subtle, ".concat(_colors.N200, ")"),
  fontWeight: "var(--ds-font-weight-semibold, 600)"
});
var newFieldsetLabelStyles = (0, _react.css)({
  color: "var(--ds-text-subtle, #44546F)",
  fontWeight: "var(--ds-font-weight-bold, 700)"
});

/**
 * __Label__
 *
 * A label represents a caption for an item in a user interface.
 *
 * It's recommended that a label has a `space.050` spacing above its associated
 * control element.
 */
var Label = exports.Label = function Label(_ref) {
  var children = _ref.children,
    htmlFor = _ref.htmlFor,
    id = _ref.id,
    testId = _ref.testId;
  return (0, _react.jsx)("label", {
    css: [fieldsetLabelStyles,
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
    (0, _platformFeatureFlags.getBooleanFF)('platform.design-system-team.form-label-typography-updates') ? newFieldsetLabelStyles : oldFieldsetLabelStyles],
    id: id,
    htmlFor: htmlFor,
    "data-testid": testId
  }, children);
};

/**
 * __Legend__
 *
 * A Legend represents a caption for a fieldset in a user interface.
 */
var Legend = exports.Legend = function Legend(_ref2) {
  var children = _ref2.children;
  return (0, _react.jsx)("legend", {
    css: [fieldsetLabelStyles,
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
    (0, _platformFeatureFlags.getBooleanFF)('platform.design-system-team.form-label-typography-updates') ? newFieldsetLabelStyles : oldFieldsetLabelStyles]
  }, children);
};
var _default = exports.default = Label;