/**
 * @jsxRuntime classic
 */
/** @jsx jsx */
import { PureComponent } from 'react';
import { jsx } from '@emotion/react';
import type { LinkComponentProps, ProgressTrackerStageRenderProp, Spacing, Stages } from './types';
export interface ProgressTrackerProps {
    /**
     * Ordered list of stage data.
     */
    items: Stages;
    /**
     * Sets the amount of spacing between the steps.
     */
    spacing: Spacing;
    /**
     * Render prop to specify custom implementations of components.
     */
    render: ProgressTrackerStageRenderProp;
    /**
     * Turns off transition animations if set to false.
     */
    animated: boolean;
    /**
     * A `testId` prop is provided for specified elements, which is a unique string that appears as a data attribute `data-testid` in the rendered code, serving as a hook for automated tests.
     */
    testId?: string;
    /**
     * Use this to provide an aria-label for the overall progress tracker, so that people who use assistive technology get an overview of the tracker's purpose. For example, "Sign up progress".
     */
    label?: string;
}
interface State {
    prevStages: Stages;
}
export default class ProgressTracker extends PureComponent<ProgressTrackerProps, State> {
    static defaultProps: {
        items: never[];
        spacing: string;
        render: {
            link: ({ item }: LinkComponentProps) => jsx.JSX.Element;
        };
        animated: boolean;
        label: string;
    };
    state: {
        prevStages: {
            percentageComplete: number;
            id: string;
            label: string;
            status: import("./types").Status;
            noLink?: boolean | undefined;
            href?: string | undefined;
            onClick?: (() => void) | undefined;
        }[];
    };
    UNSAFE_componentWillReceiveProps(nextProps: ProgressTrackerProps): void;
    render(): jsx.JSX.Element;
}
export {};
