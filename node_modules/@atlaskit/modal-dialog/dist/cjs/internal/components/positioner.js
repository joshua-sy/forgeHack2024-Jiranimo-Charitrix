"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _react = require("@emotion/react");
var _curves = require("@atlaskit/motion/curves");
var _durations = require("@atlaskit/motion/durations");
var _primitives = require("@atlaskit/primitives");
var _constants = require("@atlaskit/theme/constants");
var _constants2 = require("../constants");
/* eslint-disable @atlaskit/design-system/ensure-design-token-usage */
/**
 * @jsxRuntime classic
 */
/** @jsx jsx */

// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766

// eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
var maxWidthDimensions = "calc(100vw - ".concat(_constants2.gutter * 2, "px)");
// eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
var maxHeightDimensions = "calc(100vh - ".concat(_constants2.gutter * 2 - 1, "px)");

// Flex and min-content are set to constrain the height of the body and support multi-column scrolling experiences
var positionerStyles = (0, _react.css)({
  display: 'flex',
  width: '100%',
  maxWidth: '100%',
  height: '100%',
  position: 'fixed',
  zIndex: _constants.layers.modal(),
  flexDirection: 'column',
  insetBlockStart: 0,
  insetInlineStart: 0
});
var viewportScrollStyles = (0, _react.css)((0, _defineProperty2.default)({
  height: 'auto',
  position: 'relative'
}, _primitives.media.above.xs, {
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values, @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
  margin: "".concat(_constants2.gutter, "px auto"),
  pointerEvents: 'none'
}));
var bodyScrollStyles = (0, _react.css)((0, _defineProperty2.default)({}, _primitives.media.above.xs, {
  maxWidth: maxWidthDimensions,
  maxHeight: maxHeightDimensions,
  position: 'absolute',
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values, @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
  insetBlockStart: "".concat(_constants2.gutter, "px"),
  insetInlineEnd: 0,
  insetInlineStart: 0,
  marginInlineEnd: 'auto',
  marginInlineStart: 'auto',
  pointerEvents: 'none'
}));
var stackTransitionStyles = (0, _react.css)({
  transitionDuration: "".concat(_durations.mediumDurationMs, "ms"),
  transitionProperty: 'transform',
  transitionTimingFunction: _curves.easeInOut,
  /**
   * Duplicated from @atlaskit/motion/accessibility
   * because @repo/internal/styles/consistent-style-ordering
   * doesn't work well with object spreading.
   */
  '@media (prefers-reduced-motion: reduce)': {
    animation: 'none',
    transition: 'none'
  }
});
var stackTransformStyles = (0, _react.css)({
  transform: 'translateY(var(--modal-dialog-translate-y))'
});
var stackIdleStyles = (0, _react.css)({
  transform: 'none'
});
var Positioner = function Positioner(props) {
  var children = props.children,
    stackIndex = props.stackIndex,
    shouldScrollInViewport = props.shouldScrollInViewport,
    testId = props.testId;
  return (0, _react.jsx)("div", {
    // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop -- Ignored via go/DSP-18766
    style: {
      // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
      '--modal-dialog-translate-y': "".concat(stackIndex * (_constants2.verticalOffset / 2), "px")
      // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
    },
    css: [positionerStyles, stackTransitionStyles, /* We only want to apply transform on modals shifting to the back of the stack. */
    stackIndex > 0 ? stackTransformStyles : stackIdleStyles, shouldScrollInViewport ? viewportScrollStyles : bodyScrollStyles],
    "data-testid": testId && "".concat(testId, "--positioner")
  }, children);
};

// eslint-disable-next-line @repo/internal/react/require-jsdoc
var _default = exports.default = Positioner;