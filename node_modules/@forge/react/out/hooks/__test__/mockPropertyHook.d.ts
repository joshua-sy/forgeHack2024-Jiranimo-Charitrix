import type { EntityContext } from '../types';
export declare const DEFAULT_PROP_VALUE: number, EXISTING_PROP_VALUE: number, UPDATED_PROP_VALUE: number;
export declare const mockConfContext: EntityContext;
export declare const mockJiraContext: EntityContext;
/**
 * Mock functions for API calls
 */
export declare const mockFailedRes: {
    ok: boolean;
    status: number;
};
export declare const mockConfGetExistingRes: {
    ok: boolean;
    status: number;
    json: () => {
        results: {
            id: string;
            value: number;
            version: {
                number: number;
            };
        }[];
    };
};
export declare const mockConfGetNonExistentRes: {
    ok: boolean;
    status: number;
    json: () => {
        results: never[];
    };
};
export declare const mockConfCreateRes: {
    ok: boolean;
    status: number;
    json: () => {
        id: string;
        value: number;
    };
};
export declare const mockConfUpdateValueRes: {
    ok: boolean;
    status: number;
    json: () => {
        id: string;
        value: number;
    };
};
export declare const mockConfUpdateFunctionRes: {
    ok: boolean;
    status: number;
    json: () => {
        id: string;
        value: number;
    };
};
export declare const mockConfDeleteRes: {
    ok: boolean;
    status: number;
};
export declare const mockJiraSuccessRes: {
    ok: boolean;
    status: number;
};
export declare const mockJiraGetExistingRes: {
    ok: boolean;
    status: number;
    json: () => {
        key: string;
        value: number;
    };
};
export declare const mockJiraGetNonExistentRes: {
    ok: boolean;
    status: number;
};
//# sourceMappingURL=mockPropertyHook.d.ts.map