import * as React from 'react';
declare type Act = (cb: () => Promise<any>) => Promise<any>;
export declare const create: (element: React.ReactElement) => Promise<{
    update(newElement: React.ReactElement): Promise<void>;
}>;
export declare const addConfig: (element: React.ReactElement) => Promise<{
    update(newElement: React.ReactElement): Promise<void>;
}>;
declare const _default: {
    create: (element: React.ReactElement<any, string | React.JSXElementConstructor<any>>) => Promise<{
        update(newElement: React.ReactElement<any, string | React.JSXElementConstructor<any>>): Promise<void>;
    }>;
    act: Act;
    addConfig: (element: React.ReactElement<any, string | React.JSXElementConstructor<any>>) => Promise<{
        update(newElement: React.ReactElement<any, string | React.JSXElementConstructor<any>>): Promise<void>;
    }>;
};
export default _default;
//# sourceMappingURL=reconcilerTestRenderer.d.ts.map