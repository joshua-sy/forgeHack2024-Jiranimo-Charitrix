"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.propertiesApi = void 0;
const index_1 = require("../index");
const jira_issue_1 = require("./jira-issue");
const jira_project_1 = require("./jira-project");
const confluence_page_1 = require("./confluence-page");
const confluence_space_1 = require("./confluence-space");
const sanitized_key_1 = require("./sanitized-key");
const getPropertiesInstance = (adapter) => {
    console.warn('The @forge/api Properties API is deprecated, you shoud now call product REST APIs directly.');
    const storage = {
        get: (key) => adapter.get((0, sanitized_key_1.sanitizedKey)(key)),
        set: (key, value) => adapter.set((0, sanitized_key_1.sanitizedKey)(key), value),
        delete: (key) => adapter.delete((0, sanitized_key_1.sanitizedKey)(key))
    };
    return storage;
};
exports.propertiesApi = {
    onJiraIssue: (issueKey) => getPropertiesInstance(new jira_issue_1.JiraIssueStorage((0, sanitized_key_1.sanitizedKey)(issueKey), (0, index_1.asApp)().requestJira)),
    onJiraProject: (projectKey) => getPropertiesInstance(new jira_project_1.JiraProjectStorage(projectKey, (0, index_1.asApp)().requestJira)),
    onConfluencePage: (pageId) => getPropertiesInstance(new confluence_page_1.ConfluencePageStorage((0, sanitized_key_1.sanitizedKey)(pageId), (0, index_1.asApp)().requestConfluence)),
    onConfluenceSpace: (spaceId) => getPropertiesInstance(new confluence_space_1.ConfluenceSpaceStorage((0, sanitized_key_1.sanitizedKey)(spaceId), (0, index_1.asApp)().requestConfluence))
};
